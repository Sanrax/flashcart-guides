{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome!","text":"<p>Meet Ryuuko, our cute flashcart expert who will help you set up your flashcart!</p> <p>This page contains guides for setting up various carts we commonly encounter over on the r/flashcarts subreddit. Carts are grouped by the hardware family they belong to. Find your cart and click on it to get taken to its corresponding instructions page. You can also hover over links to see a cart preview.</p> <p>If you'd like to improve this resource or add new carts, feel free to create a pull request in the GitHub repository!</p>"},{"location":"#cart-guides","title":"Cart Guides","text":""},{"location":"#dstti-family","title":"DSTT/i Family","text":"<ul> <li>Timebomb [DEMON-HW] Carts - r4isdhc.com 2014+, r4i-sdhc.com, and more</li> <li>DSTT/i and Clones - See YSMenu Compatibility List</li> <li>R4i SDHC Renovation V2.10T &amp; V2.20T - r4sdhc.com</li> <li>R4i SDHC Brand New V2.0 - r4isdhc.com</li> </ul>"},{"location":"#r4-and-r4sdhc-family","title":"R4 and R4SDHC Family","text":"<ul> <li>Ace3DS+/R4iLS - See cart list (1)</li> <li>Gateway Blue - gateway-3ds.com</li> <li>EX4DS - ex4ds.com</li> <li>Original R4 - r4ds.com</li> <li>M3 Simply - m3adapter.com</li> <li>Original R4SDHC - r4sdhc.com</li> <li>R4SDHC Christmas - r4isdhc.com</li> <li>R4i SDHC Christmas - r4isdhc.com</li> <li>R4i SDHC V1.4 - r4sdhc.com</li> <li>R4DS Happybox - r4isdhc.com</li> <li>R4 Upgrade/R4-III - r4dsl.net</li> <li>N5 - dsn5.com</li> <li>R4 Deluxe - r4deluxe.com</li> </ul> <ol> <li>Compatibility List<ul> <li>Ace3DS+</li> <li>Ace3DS X</li> <li>### in 1 combo cart</li> <li>r4azure.com carts</li> <li>r4inp.com carts</li> <li>r4isdhc.com.cn carts</li> <li>r4iwood.cn carts</li> <li>r4isdhc.hk 2020+ carts</li> <li>r4li.com carts</li> <li>r4infinity.com 2</li> <li>r4ixds.com 2014 white version</li> <li>woodr4isdhc.com carts</li> <li>ge.ndsi.in GEi HOT</li> </ul> </li> </ol>"},{"location":"#r4itt-family","title":"R4iTT Family","text":"<ul> <li>BL2CK Carts - See cart list (1)</li> <li>R4DS Pro - See cart list (2)</li> </ul> <ol> <li> <p>Compatibility List</p> <ul> <li>Default Version:<ul> <li>Acekard 2/2.1/2i clone carts that can't boot AKAIO 1.9.0</li> <li>R4i Gold 3DS Plus (r4ids.cn) with faulty DS mode</li> <li>R4i Infinity A.C. Kard</li> <li>r4i3d.com NEW, 2012+</li> <li>r4igold.cc 3DS, New</li> <li>r4infinity.com Dual-Core, V1.6</li> <li>r4isdhc.com Dual-Core (no year number)</li> <li>r4isdhc.com NEW/2013 carts</li> <li>r4isdhc.hk carts with no year number, or before 2020</li> <li>r4isdhc.in carts</li> <li>R4iTT 3DS NEW, RTS</li> <li>r4ixds.com 2014-2016 non-white</li> <li>r4i-drive.com carts</li> <li>r4i-gold.com 3DS Gold Pro, 2013 carts</li> <li>r4i-gold.me 2013-2015</li> <li>r4sdhc.com R4i SDHC Renovation V3DSU</li> <li>r4ultra.com carts that can't boot R4 Ultra AKAIO 1.8.6a</li> <li>r4i-u.com carts</li> <li>r4ds-i.com.cn carts</li> <li>r4-pro.com carts</li> <li>super4i.com R4i Super</li> </ul> </li> <li>Amaze3DS Version:<ul> <li>r4igold.cc Wood carts</li> <li>Amaze3DS carts</li> </ul> </li> </ul> </li> <li> <p>Compatibility List</p> <ul> <li>AliExpress R4DS Pro carts</li> <li>r4iplat.com carts</li> <li>r4i-d.com carts</li> <li>r4i-3dsnew.com carts</li> </ul> </li> </ol>"},{"location":"#acekard-family","title":"Acekard Family","text":"<ul> <li>Acekard 2/2.1/2i - acekard.com</li> <li>R4 Ultra - r4ultra.com</li> <li>R4i+ 3DS/DS Gold &amp; R4i 3DS RTS - r4ids.cn</li> <li>R4i Gold (Non-3DS) - r4ids.cn</li> <li>R4iDS.com Original - r4ids.com</li> <li>R4i Gold 2.0 - r4ids.com</li> </ul>"},{"location":"#galaxy-eagle-family","title":"Galaxy Eagle Family","text":"<ul> <li>Galaxy Eagle - ge.ndsi.in</li> <li>Galaxy Eagle Pro - ge.ndsi.in</li> <li>Original R4iGold.cc - r4igold.cc</li> </ul>"},{"location":"#supercard-family","title":"SuperCard Family","text":"<ul> <li>DSOne SDHC - supercard.sc</li> </ul>"},{"location":"#m3-family","title":"M3 Family","text":"<ul> <li>M3 DS Real - m3adapter.com</li> <li>iTouchDS - m3adapter.com</li> <li>R4iSDHC RTS Black - r4isdhc.com</li> <li>R4i SDHC RTS - r4rts.com</li> </ul>"},{"location":"#other-flashcarts","title":"Other Flashcarts","text":"<ul> <li>Stargate 3DS - stargate-3ds.com</li> <li>EZ Flash Parallel - ezflash.cn</li> <li>N-Card and Clones - dsgba.com</li> </ul>"},{"location":"cart-guides/ace3ds_r4ils/","title":"Ace3DS+/X & R4iLS","text":""},{"location":"cart-guides/ace3ds_r4ils/#ace3dsx-r4ils-clones","title":"Ace3DS+/X &amp; R4iLS Clones","text":""},{"location":"cart-guides/ace3ds_r4ils/#r4isdhchk-2020-r4isdhccomcn-ace3dscom-xxx-in-1","title":"r4isdhc.hk 2020+, r4isdhc.com.cn, ace3ds.com, XXX in 1","text":""},{"location":"cart-guides/ace3ds_r4ils/#setup-guide","title":"Setup Guide:","text":"Ace WoodR4 1.62AceOS 2.13 <ol> <li> <p>Format the SD card you are using by following the formatting tutorial.</p> </li> <li> <p>Download the Ace3DS+/R4iLS WoodR4 1.62 kernel.</p> </li> <li> <p>Open/extract the zip file, and copy the contents into the root of your SD card.</p> </li> <li> <p>If you'd like to be able to use cheats on your games, download a cheat database.</p> </li> <li> <p>You will need the <code>usrcheat.7z</code> file. Extract it using 7-Zip, inside you will find a <code>usrcheat.dat</code> file. Copy this file to <code>__rpg/cheats/</code> on your SD card. (Create the <code>cheats</code> folder if it doesn't exist)</p> </li> <li> <p>Create a <code>Games</code> folder in your SD card root, and place your <code>.nds</code> game ROMs inside. You can also create additional folders to help with organizing/categorizing your ROMs.</p> </li> <li> <p>The files on your SD card should now look like this:</p> <ul> <li></li> </ul> </li> <li> <p>Insert the SD card back into your cart, plug the cart into your DS, and see if it boots into the menu.</p> </li> </ol> <p>Missing Anti-Piracy Patches</p> <p>Ace WoodR4 1.62 is known to have issues with anti-piracy checks in a few newer games, notably with clean roms of Pokemon Black &amp; White 2, where EXP gain gets disabled by AP detection.</p> <p>To fix this issue, tap the Y button in the WoodR4 menu with the game highlighted, open the cheats menu, and enable the <code>Bypass Anti-Piracy</code> cheat before starting the game.</p> <p>AceOS Kernel Package</p> <p>AceOS is a version of the kernel that includes a custom start menu allowing you to boot into various preloaded emulators, apps, and hypervisors; GBARunner2 and 3, GameYob, NesDS, Moonshell2, and others.</p> <p>To set up AceOS on your cart, follow the instructions found in the AOS README.</p> <p>All carts that are supported by Ace WoodR4 will be able to run AceOS as well.</p> <p>Themes</p> <p>Looking to change the default theme? Check out the themes repository at themes.flashcarts.net!</p>"},{"location":"cart-guides/acekard/","title":"Acekard 2/2.1/2i","text":""},{"location":"cart-guides/acekard/#acekard-2212i","title":"Acekard 2/2.1/2i","text":""},{"location":"cart-guides/acekard/#acekardcom","title":"acekard.com","text":""},{"location":"cart-guides/acekard/#setup-guide","title":"Setup Guide:","text":"<ol> <li> <p>Format the SD card you are using by following the formatting tutorial.</p> </li> <li> <p>Download the AKAIO 1.9.0 kernel.</p> </li> <li> <p>Open/extract the zip file, then copy <code>__aio</code> and <code>akmenu4.nds</code> into the root of your SD card.</p> </li> <li> <p>If you'd like to be able to use cheats on your games, download a cheat database.</p> </li> <li> <p>You will need the <code>usrcheat.7z</code> file. Extract it using 7-Zip, inside you will find a <code>usrcheat.dat</code> file. Copy this file to <code>__aio/cheats/</code> on your SD card. (Create the <code>cheats</code> folder if it doesn't exist)</p> </li> <li> <p>Create a <code>Games</code> folder in your SD card root, and place your <code>.nds</code> game ROMs inside. You can also create additional folders to help with organizing/categorizing your ROMs.</p> </li> <li> <p>The files on your SD card should now look like this:</p> <ul> <li></li> </ul> </li> <li> <p>Insert the SD card back into your cart, plug the cart into your DS, and see if it boots into the menu.</p> </li> </ol> <p>Themes</p> <p>Looking to change the default theme? Check out the themes repository at themes.flashcarts.net!</p>"},{"location":"cart-guides/bl2ck/","title":"BL2CK Carts","text":""},{"location":"cart-guides/bl2ck/#acekardr4itt-clones","title":"Acekard/R4iTT Clones","text":"<p>Compatibility Info</p> <p>See Flashcard-Archive Readme for a list of compatible carts.</p> <p>Warning</p> <p>Never attempt to use YSMenu on a cart that uses BL2CK! You will brick the cart!</p>"},{"location":"cart-guides/bl2ck/#setup-guide","title":"Setup Guide:","text":"StandardAmaze3DS <ol> <li> <p>Format the SD card you are using by following the formatting tutorial.</p> </li> <li> <p>Download the BL2CK 1.31.0 kernel.</p> </li> <li> <p>Open/extract the zip file, and copy the contents into the root of your SD card.</p> </li> <li> <p>If you'd like to be able to use cheats on your games, download a cheat database.</p> </li> <li> <p>You will need the <code>usrcheat.7z</code> file. Extract it using 7-Zip, inside you will find a <code>usrcheat.dat</code> file. Copy this file to <code>__rpg/cheats/</code> on your SD card. (Create the <code>cheats</code> folder if it doesn't exist)</p> </li> <li> <p>Create a <code>Games</code> folder in your SD card root, and place your <code>.nds</code> game ROMs inside. You can also create additional folders to help with organizing/categorizing your ROMs.</p> </li> <li> <p>The files on your SD card should now look like this:</p> <ul> <li></li> </ul> </li> <li> <p>Insert the SD card back into your cart, plug the cart into your DS, and see if it boots into the menu.</p> </li> </ol> <ol> <li> <p>Format the SD card you are using by following the formatting tutorial.</p> </li> <li> <p>Download the BL2CK 1.31.0 Amaze3DS kernel.</p> </li> <li> <p>Open/extract the zip file, and copy the contents into the root of your SD card.</p> </li> <li> <p>If you'd like to be able to use cheats on your games, download a cheat database.</p> </li> <li> <p>You will need the <code>usrcheat.7z</code> file. Extract it using 7-Zip, inside you will find a <code>usrcheat.dat</code> file. Copy this file to <code>__rpg/cheats/</code> on your SD card. (Create the <code>cheats</code> folder if it doesn't exist)</p> </li> <li> <p>Create a <code>Games</code> folder in your SD card root, and place your <code>.nds</code> game ROMs inside. You can also create additional folders to help with organizing/categorizing your ROMs.</p> </li> <li> <p>The files on your SD card should now look like this:</p> <ul> <li></li> </ul> </li> <li> <p>Insert the SD card back into your cart, plug the cart into your DS, and see if it boots into the menu.</p> </li> </ol> <p>Themes</p> <p>Looking to change the default theme? Check out the themes repository at themes.flashcarts.net!</p>"},{"location":"cart-guides/dsone/","title":"DSOne SDHC","text":""},{"location":"cart-guides/dsone/#dsone-sdhc","title":"DSOne SDHC","text":""},{"location":"cart-guides/dsone/#supercardsc","title":"supercard.sc","text":"<p>Info</p> <p>The DSOne SDHC is one of the SuperCard team's later flashcarts, with some uncommon features like RTS (Real Time Save), and an in-game menu. EvolutionOS, the flashcart's stock kernel, is compatible with nearly all DS games and romhacks, so it is fairly reliable.</p> <p>Unfortunately, some DSOne carts have faulty PSRAM, which causes EvolutionOS to not work on those carts due to EOS relying on the PSRAM to function. These carts can use YSMenu instead to retain basic DS game loading functionality, but will not have access to EvolutionOS-exclusive functionality like RTS.</p>"},{"location":"cart-guides/dsone/#setup-guide","title":"Setup Guide:","text":"Evolution OSYSMenu - Broken PSRAM Carts <ol> <li> <p>Format the SD card you are using by following the formatting tutorial.</p> </li> <li> <p>Download the Evolution OS SP6 kernel.</p> </li> <li> <p>Open/extract the zip file, and copy the contents into the root of your SD card.</p> </li> <li> <p>If you'd like to be able to use cheats on your games, download a cheat database.</p> </li> <li> <p>You will need the <code>usrcheat.7z</code> file. Extract it using 7-Zip, inside you will find a <code>usrcheat.dat</code> file. Copy this file into the <code>_dsone</code> folder on your SD card.</p> </li> <li> <p>Create a <code>Games</code> folder in your SD card root, and place your <code>.nds</code> game ROMs inside. You can also create additional folders to help with organizing/categorizing your ROMs.</p> </li> <li> <p>The files on your SD card should now look like this:</p> <ul> <li></li> </ul> </li> <li> <p>Insert the SD card back into your cart, plug the cart into your DS, and see if it boots into the menu.</p> </li> </ol> <p>Tip</p> <p>If you'd like to learn more about the various options and functionality found in EvolutionOS, check out the DSOne Manual!</p> <ol> <li> <p>Format the SD card you are using by following the formatting tutorial.</p> </li> <li> <p>Download the RetroGameFan YSMenu 7.06 kernel.</p> </li> <li> <p>Extract the YSMenu .7z file you downloaded using 7-Zip, then go into the <code>DSONEi SDHC YSMenu</code> folder.</p> </li> <li> <p>From this folder, copy the following files/folders to your SD card root:</p> <ul> <li> <p><code>Games</code> folder</p> </li> <li> <p><code>TTMenu</code> folder</p> </li> <li> <p><code>SCFW.SC</code></p> </li> <li> <p><code>TTMenu.dat</code></p> </li> </ul> </li> <li> <p>Place any <code>.nds</code> game ROMs you'd like to play into the <code>Games</code> folder.</p> </li> <li> <p>Insert the SD card back into your cart, plug the cart into your DS, and see if it boots into the menu.</p> </li> </ol>"},{"location":"cart-guides/dstti/","title":"DSTT/i & Clones","text":""},{"location":"cart-guides/dstti/#dstti-clones","title":"DSTT/i &amp; Clones","text":""},{"location":"cart-guides/dstti/#ndsttcom-and-many-clones","title":"ndstt.com (and many clones)","text":""},{"location":"cart-guides/dstti/#setup-guide","title":"Setup Guide:","text":"<p>Compatibility Info</p> <p>See YSMenu Compatibility List's <code>DSTTi-Clone YSMenu</code> section for a full list of compatible carts.</p> <ol> <li> <p>Format the SD card you are using by following the formatting tutorial.</p> </li> <li> <p>Download the RetroGameFan YSMenu 7.06 kernel.</p> </li> <li> <p>Extract the YSMenu .7z file you downloaded using 7-Zip, then go into the <code>DSTTi-Clone YSMenu</code> folder.</p> </li> <li> <p>From this folder, copy the following files/folders to your SD card root:</p> <ul> <li> <p><code>Games</code> folder</p> </li> <li> <p><code>TTMenu</code> folder</p> </li> <li> <p><code>TTMenu.dat</code></p> </li> </ul> </li> <li> <p>Some DSTTi clones load from a boot file other than <code>TTMenu.dat</code>. Find your flashcart in the YSMenu compatibility list by searching the page (<code>CTRL</code>+<code>F</code>) for the URL listed on your cart's label.</p> <ul> <li> <p>If your cart is listed as needing an extra boot file, make copies of the <code>TTMenu.dat</code> file on your SD card root, then rename the copy appropriately.</p> </li> <li> <p>Note that in all cases, <code>TTMenu.dat</code> still needs to be on your SD for soft-reset to function. Do not remove it.</p> </li> </ul> </li> <li> <p>Place any <code>.nds</code> game ROMs you'd like to play into the <code>Games</code> folder.</p> </li> <li> <p>The files on your SD card should now look like this:</p> <ul> <li></li> </ul> </li> <li> <p>Insert the SD card back into your cart, plug the cart into your DS, and see if it boots into the menu.</p> </li> </ol>"},{"location":"cart-guides/ex4ds/","title":"EX4DS","text":""},{"location":"cart-guides/ex4ds/#ex4ds","title":"EX4DS","text":""},{"location":"cart-guides/ex4ds/#ex4dscom","title":"ex4ds.com","text":"<p>Info</p> <p>The EX4DS is a cart based on R4iLS hardware, marketed as a SuperCard DSTWO competitor. Like the DSTWO, it contains extra hardware for running cart-specific plugins that can be launched from its menu. Currently, these include accelerated movie and music playback, and a GBA emulator. This cart's kernel is also the source of AceOS - the Ace3DS team used the EX4DS' start-up launch menu for the AOS launch menu.</p>"},{"location":"cart-guides/ex4ds/#setup-guide","title":"Setup Guide:","text":"<ol> <li> <p>Format the SD card you are using by following the formatting tutorial.</p> </li> <li> <p>Download EX4DS AceOS 2.13.</p> </li> <li> <p>Open/extract the zip file, and copy the contents into the root of your SD card.</p> </li> <li> <p>If you'd like to be able to use cheats on your games, download a cheat database.</p> </li> <li> <p>You will need the <code>usrcheat.7z</code> file. Extract it using 7-Zip, inside you will find a <code>usrcheat.dat</code> file. Copy this file to <code>__rpg/cheats/</code> on your SD card. (Create the <code>cheats</code> folder if it doesn't exist)</p> </li> <li> <p>Navigate to <code>/roms</code> and place your <code>.nds</code> game ROMs inside the <code>nds</code> folder. Place other console roms supported by AceOS emulators in their respective folders.</p> </li> <li> <p>The files on your SD card should now look like this:</p> <ul> <li></li> </ul> </li> <li> <p>Insert the SD card back into your cart, plug the cart into your DS, and see if it boots into the menu.</p> </li> </ol> <p>Tip</p> <p>Some emulators shipped with AceOS require you to provide a BIOS binary before they can be used. See the AOS README for more info.</p> <p>Missing Anti-Piracy Patches</p> <p>Since the EX4DS uses Ace WoodR4, it has issues with anti-piracy checks in a few newer games, notably with clean roms of Pokemon Black &amp; White 2, where EXP gain gets disabled by AP detection.</p> <p>To fix this issue, tap the Y button in the WoodR4 menu with the game highlighted, open the cheats menu, and enable the <code>Bypass Anti-Piracy</code> cheat before starting the game.</p>"},{"location":"cart-guides/ezflash_parallel/","title":"EZ-Flash Parallel","text":""},{"location":"cart-guides/ezflash_parallel/#ez-flash-parallel","title":"EZ Flash Parallel","text":""},{"location":"cart-guides/ezflash_parallel/#ezflashcn","title":"ezflash.cn","text":"<p>Known Issues</p> <p>This cart is known to have a few problems due to its flawed hardware:</p> <ol> <li> <p>The SD access on this cart is fairly slow which may cause some games &amp; homebrew to run with slowdown.</p> </li> <li> <p>Sleep mode on this cart is broken. Closing the DS lid causes the screen to turn off, but the game continues to run.</p> </li> <li> <p>In some cases, this cart needs the paper trick to be read by the console due to inconsistent shell quality.</p> </li> </ol> <p>Warning</p> <p>Do not run the game <code>Casper's Scare School: Spooky Sports Day</code> on any Kernel below 1.06, this will brick the cart due to an oversight with the save patch system on kernels 1.05 and below.</p>"},{"location":"cart-guides/ezflash_parallel/#setup-guide","title":"Setup Guide:","text":"<ol> <li> <p>Format the SD card you are using by following the formatting tutorial.</p> </li> <li> <p>Download the EZ-Flash 1.06 Kernel</p> </li> <li> <p>Open/extract the zip file, and copy the contents into the root of your SD card.</p> </li> <li> <p>A cheat database is included, but if you want to use a different one, download the DSJ cheat database.</p> </li> <li> <p>You will need the <code>usrcheat.7z</code> file. Extract it using 7-Zip, inside you will find a <code>usrcheat.dat</code> file. Copy this file to <code>__ezds/cheats/</code> on your SD card and overwrite the old one.</p> </li> <li> <p>Create a <code>Games</code> folder in your SD card root, and place your <code>.nds</code> game ROMs inside. You can also create additional folders to help with organizing/categorizing your ROMs.</p> </li> <li> <p>Insert the SD card back into your cart, plug the cart into your DS, and see if it boots into the menu.</p> </li> </ol> <p>Themes</p> <p>Looking to change the default theme? Check out the themes repository at themes.flashcarts.net!</p>"},{"location":"cart-guides/galaxy_eagle/","title":"Galaxy Eagle","text":""},{"location":"cart-guides/galaxy_eagle/#galaxy-eagle","title":"Galaxy Eagle","text":""},{"location":"cart-guides/galaxy_eagle/#gendsiin","title":"ge.ndsi.in","text":"<p>Info</p> <p>The Galaxy Eagle is a clone of the Acekard 2i. Unfortunately, it's not a very good clone, and neither AKAIO nor BL2CK work properly on it. While BL2CK boots, it will freeze on a white screen when attempting to load any commercial ROM file. Therefore, AKMenu-Next is the recommended primary kernel for it, so that nds-bootstrap can be used to load games. As an alternative option, the stock kernel is also provided, but it will likely be able to run less games than AKMenu-Next.</p>"},{"location":"cart-guides/galaxy_eagle/#setup-guide","title":"Setup Guide:","text":"AKMenu-NextStock GEi v4.2 <ol> <li> <p>Download the latest release of AKMenu-Next Flashcart Edition.</p> </li> <li> <p>Extract the downloaded <code>akmenu-next-flashcart.zip</code> file with 7-Zip.</p> </li> <li> <p>From within the akmenu-next files, copy the following files/folders to your SD card root:</p> <ul> <li><code>_nds</code> folder</li> <li><code>BOOT.NDS</code></li> </ul> </li> <li> <p>Download the latest release of nds-bootstrap.</p> </li> <li> <p>Extract the downloaded <code>nds-bootstrap.zip</code> file with 7-Zip.</p> </li> <li> <p>Copy the contents of the files from the extracted <code>nds-bootstrap.zip</code> file to the <code>_nds</code> folder on your SD card.</p> </li> <li> <p>If you'd like to be able to use cheats on your games, download a cheat database.</p> </li> <li> <p>You will need the <code>usrcheat.7z</code> file. Extract it using 7-Zip, inside you will find a <code>usrcheat.dat</code> file. Copy this file to <code>_nds/akmenunext/cheats/</code> on your SD card. (Create the <code>cheats</code> folder if it doesn't exist)</p> </li> <li> <p>Open the <code>Autoboot</code> folder within the AKMenu-Next files.</p> </li> <li> <p>Copy the contents of the <code>Galaxy Eagle</code> folder (do not copy the folder itself) to the root of your SD card.</p> </li> <li> <p>Create a <code>Games</code> folder in your SD card root, and place your <code>.nds</code> game ROMs inside. You can also create additional folders to help with organizing/categorizing your ROMs.</p> </li> <li> <p>The files on your SD card should now look like this:</p> <ul> <li></li> </ul> </li> <li> <p>Insert the SD card back into your cart, plug the cart into your DS, and see if it boots into the menu.</p> </li> </ol> <p>Themes</p> <p>Looking to change the default theme? Check out the themes repository at themes.flashcarts.net!</p> <p>Kernel Info</p> <p>Keep in mind that this kernel is outdated. Some newer games will refuse to boot, but this is useable alternative if AKMenu-Next's nds-bootstrap loader fails to load something.</p> <ol> <li> <p>Format the SD card you are using by following the formatting tutorial.</p> </li> <li> <p>Download the GEi 4.2 kernel.</p> </li> <li> <p>Open/extract the zip file, and copy the contents into the root of your SD card.</p> </li> <li> <p>If you'd like to be able to use cheats on your games, download a cheat database.</p> </li> <li> <p>You will need the <code>usrcheat.7z</code> file. Extract it using 7-Zip, inside you will find a <code>usrcheat.dat</code> file. </p> </li> <li> <p>Rename the <code>usrcheat.dat</code> file to <code>cheat.dat</code>.</p> </li> <li> <p>Copy <code>cheat.dat</code> into the <code>_SYSTEM_</code> folder.</p> </li> <li> <p>Create a <code>Games</code> folder in your SD card root, and place your <code>.nds</code> game ROMs inside. You can also create additional folders to help with organizing/categorizing your ROMs.</p> </li> <li> <p>The files on your SD card should now look like this:</p> <ul> <li></li> </ul> </li> <li> <p>Insert the SD card back into your cart, plug the cart into your DS, and see if it boots into the menu.</p> </li> </ol>"},{"location":"cart-guides/galaxy_eagle_pro/","title":"Galaxy Eagle Pro","text":""},{"location":"cart-guides/galaxy_eagle_pro/#galaxy-eagle-pro","title":"Galaxy Eagle Pro","text":""},{"location":"cart-guides/galaxy_eagle_pro/#gendsiin","title":"ge.ndsi.in","text":"<p>Info</p> <p>The Galaxy Eagle Pro is a clone of the Acekard 2i. Unfortunately, it's not a very good clone, and neither AKAIO nor BL2CK work properly on it. While BL2CK boots, it will freeze on a white screen when attempting to load any commercial ROM file. Therefore, AKMenu-Next is the recommended primary kernel for it, so that nds-bootstrap can be used to load games. As an alternative option, the stock kernel is also provided, but it will likely be able to run less games than AKMenu-Next.</p>"},{"location":"cart-guides/galaxy_eagle_pro/#setup-guide","title":"Setup Guide:","text":"AKMenu-NextGEi Pro v5.1 <ol> <li> <p>Download the latest release of AKMenu-Next Flashcart Edition.</p> </li> <li> <p>Extract the downloaded <code>akmenu-next-flashcart.zip</code> file with 7-Zip.</p> </li> <li> <p>From within the akmenu-next files, copy the following files/folders to your SD card root:</p> <ul> <li><code>_nds</code> folder</li> <li><code>BOOT.NDS</code></li> </ul> </li> <li> <p>Download the latest release of nds-bootstrap.</p> </li> <li> <p>Extract the downloaded <code>nds-bootstrap.zip</code> file with 7-Zip.</p> </li> <li> <p>Copy the contents of the files from the extracted <code>nds-bootstrap.zip</code> file to the <code>_nds</code> folder on your SD card.</p> </li> <li> <p>If you'd like to be able to use cheats on your games, download a cheat database.</p> </li> <li> <p>You will need the <code>usrcheat.7z</code> file. Extract it using 7-Zip, inside you will find a <code>usrcheat.dat</code> file. Copy this file to <code>_nds/akmenunext/cheats/</code> on your SD card. (Create the <code>cheats</code> folder if it doesn't exist)</p> </li> <li> <p>Open the <code>Autoboot</code> folder within the AKMenu-Next files.</p> </li> <li> <p>Copy the contents of the <code>Galaxy Eagle</code> folder (do not copy the folder itself) to the root of your SD card.</p> </li> <li> <p>Create a <code>Games</code> folder in your SD card root, and place your <code>.nds</code> game ROMs inside. You can also create additional folders to help with organizing/categorizing your ROMs.</p> </li> <li> <p>The files on your SD card should now look like this:</p> <ul> <li></li> </ul> </li> <li> <p>Insert the SD card back into your cart, plug the cart into your DS, and see if it boots into the menu.</p> </li> </ol> <p>Themes</p> <p>Looking to change the default theme? Check out the themes repository at themes.flashcarts.net!</p> <p>Kernel Info</p> <p>Keep in mind that this kernel is outdated. Some newer games will refuse to boot, but this is useable alternative if AKMenu-Next's nds-bootstrap loader fails to load something.</p> <ol> <li> <p>Format the SD card you are using by following the formatting tutorial.</p> </li> <li> <p>Download the GEi Pro 5.1 kernel.</p> </li> <li> <p>Open/extract the zip file, and copy the contents into the root of your SD card.</p> </li> <li> <p>If you'd like to be able to use cheats on your games, download a cheat database.</p> </li> <li> <p>You will need the <code>usrcheat.7z</code> file. Extract it using 7-Zip, inside you will find a <code>usrcheat.dat</code> file. </p> </li> <li> <p>Rename the <code>usrcheat.dat</code> file to <code>cheat.dat</code>.</p> </li> <li> <p>Copy <code>cheat.dat</code> into the <code>_SYSTEM_</code> folder.</p> </li> <li> <p>Create a <code>Games</code> folder in your SD card root, and place your <code>.nds</code> game ROMs inside. You can also create additional folders to help with organizing/categorizing your ROMs.</p> </li> <li> <p>The files on your SD card should now look like this:</p> <ul> <li></li> </ul> </li> <li> <p>Insert the SD card back into your cart, plug the cart into your DS, and see if it boots into the menu.</p> </li> </ol>"},{"location":"cart-guides/gwblue/","title":"Gateway Blue","text":""},{"location":"cart-guides/gwblue/#gateway-blue","title":"Gateway Blue","text":""},{"location":"cart-guides/gwblue/#gateway-3dscom","title":"gateway-3ds.com","text":"<p>Info</p> <p>Gateway3DS was a bundle of two flashcarts; one blue DS mode cart, and one red 3DS mode cart. The main goal of this product was to launch 3DS ROMs from the red cart. This was achieved by running a DS mode exploit from the blue cart to load into Gateway emuNAND, where the red cart could then be used.</p> <p>Nowadays, Luma3DS has replaced the need for the red cart, but the blue cart can be used as a standard DS flashcart to run NDS roms and homebrew on any DS family system. The setup guides below will cover setting up the blue cart for this use case. As this cart is related to the R4iLS, it uses the same AceWood kernel, but with a different header.</p>"},{"location":"cart-guides/gwblue/#setup-guide","title":"Setup Guide:","text":"Gateway Blue WoodR4 1.62AceOS 2.13 <ol> <li> <p>Format the SD card you are using by following the formatting tutorial.</p> </li> <li> <p>Download the Gateway Blue WoodR4 1.62 kernel.</p> </li> <li> <p>Open/extract the zip file, and copy the contents into the root of your SD card.</p> </li> <li> <p>If you'd like to be able to use cheats on your games, download a cheat database.</p> </li> <li> <p>You will need the <code>usrcheat.7z</code> file. Extract it using 7-Zip, inside you will find a <code>usrcheat.dat</code> file. Copy this file to <code>__rpg/cheats/</code> on your SD card. (Create the <code>cheats</code> folder if it doesn't exist)</p> </li> <li> <p>Create a <code>Games</code> folder in your SD card root, and place your <code>.nds</code> game ROMs inside. You can also create additional folders to help with organizing/categorizing your ROMs.</p> </li> <li> <p>The files on your SD card should now look like this:</p> <ul> <li></li> </ul> </li> <li> <p>Insert the SD card back into your cart, plug the cart into your DS, and see if it boots into the menu.</p> </li> </ol> <p>Missing Anti-Piracy Patches</p> <p>Gateway Blue WoodR4 1.62 is known to have issues with anti-piracy checks in a few newer games, notably with clean roms of Pokemon Black &amp; White 2, where EXP gain gets disabled by AP detection.</p> <p>To fix this issue, tap the Y button in the WoodR4 menu with the game highlighted, open the cheats menu, and enable the <code>Bypass Anti-Piracy</code> cheat before starting the game.</p> <p>AceOS Kernel Package</p> <p>AceOS is a version of the kernel that includes a custom start menu allowing you to boot into various preloaded emulators, apps, and hypervisors; GBARunner2 and 3, GameYob, NesDS, Moonshell2, and others.</p> <ol> <li> <p>Format the SD card you are using by following the formatting tutorial.</p> </li> <li> <p>Download Gateway Blue AceOS 2.13.</p> </li> <li> <p>Open/extract the zip file, and copy the contents into the root of your SD card.</p> </li> <li> <p>If you'd like to be able to use cheats on your games, download a cheat database.</p> </li> <li> <p>You will need the <code>usrcheat.7z</code> file. Extract it using 7-Zip, inside you will find a <code>usrcheat.dat</code> file. Copy this file to <code>__rpg/cheats/</code> on your SD card. (Create the <code>cheats</code> folder if it doesn't exist)</p> </li> <li> <p>Navigate to <code>/roms</code> and place your <code>.nds</code> game ROMs inside the <code>nds</code> folder. Place other console roms supported by AceOS emulators in their respective folders.</p> </li> <li> <p>Insert the SD card back into your cart, plug the cart into your DS, and see if it boots into the menu.</p> </li> </ol> <p>Tip</p> <p>Some emulators shipped with AceOS require you to provide a BIOS binary before they can be used. See the AOS README for more info.</p> <p>Missing Anti-Piracy Patches</p> <p>Gateway Blue WoodR4 1.62 is known to have issues with anti-piracy checks in a few newer games, notably with clean roms of Pokemon Black &amp; White 2, where EXP gain gets disabled by AP detection.</p> <p>To fix this issue, tap the Y button in the WoodR4 menu with the game highlighted, open the cheats menu, and enable the <code>Bypass Anti-Piracy</code> cheat before starting the game.</p> <p>Themes</p> <p>Looking to change the default theme? Check out the themes repository at themes.flashcarts.net!</p>"},{"location":"cart-guides/itouchds/","title":"iTouchDS","text":""},{"location":"cart-guides/itouchds/#itouchds","title":"iTouchDS","text":""},{"location":"cart-guides/itouchds/#m3-adapter-team","title":"M3-Adapter Team","text":"<p>Info</p> <p>These carts are made by the same team as the M3 DS Real cart. They advertised RTS support in their stock kernel, similar to the M3's RTS support in its Sakura kernel. As the cart is M3 hardware at the end of the day, it's compatible with M3 YSMenu after being booted with Lifehackerhansol's flashcart-bootstrap. A package containing the bootstrap and YSMenu for this cart is provided in the setup instructions below.</p>"},{"location":"cart-guides/itouchds/#setup-guide","title":"Setup Guide:","text":"<ol> <li> <p>Format the SD card you are using by following the formatting tutorial.</p> </li> <li> <p>Download the iTouchDS YSMenu 7.06 package.</p> </li> <li> <p>Next, extract the contents of the downloaded kernel zip to your SD card.</p> </li> <li> <p>Place any <code>.nds</code> game ROMs you'd like to play into the <code>Games</code> folder.</p> </li> <li> <p>Insert the SD back into the cart, plug the cart into the DS, and see if it boots into the menu.</p> </li> </ol> <p>Tip</p> <p>If you'd like to use RTS (Real-Time-Save), you can also use the cart's stock kernel, provided below. Do keep in mind though that game compatibility won't be as good as YSMenu, and the RTS feature itself can be hit-or-miss.</p> <ul> <li>Download iTouchDS Kernel 3.9a</li> </ul>"},{"location":"cart-guides/m3dsreal/","title":"M3 DS Real","text":""},{"location":"cart-guides/m3dsreal/#m3-ds-real-and-m3i-zero-not-gmp-z003","title":"M3 DS Real and M3i Zero (Not GMP-Z003)","text":""},{"location":"cart-guides/m3dsreal/#m3adaptercom","title":"m3adapter.com","text":"<p>Info</p> <p>The M3 DS Real is the second Slot-1 flashcart from the M3 Adapter team. The M3 team disappeared around 2011, and the Sakura kernel hasn't been updated since then. That means some games released later on in the DS lifecycle don't actually boot in the Sakura/Touchpod kernel, due to missing compatibility patches. To fix this issue, it's recommended to have either run YSMenu as replacement kernel, or Sakura with YSMenu as fallback, if you choose to keep Sakura as the primary kernel.</p> <p>While this cart does support SDHC SD cards, Sakura/TouchPod has issues with cards that are 64GB or larger. The nds loader will simply refuse to load games, or load the game but crash/freeze soon after. However, YSMenu handles 64GB and larger cards just fine on the M3 DS Real, when configured as primary kernel.</p>"},{"location":"cart-guides/m3dsreal/#setup-guide","title":"Setup Guide:","text":"YSMenuSakura + YSMenu <ol> <li> <p>Format the SD card you are using by following the formatting tutorial.</p> </li> <li> <p>Download the RetroGameFan YSMenu 7.06 kernel.</p> </li> <li> <p>Extract the YSMenu .7z file you downloaded using 7-Zip, then go into the <code>M3Real_M3iZero YSMenu</code> folder.</p> </li> <li> <p>From this folder, copy the following files/folders to your SD card root:</p> <ul> <li> <p><code>Games</code> folder</p> </li> <li> <p><code>System</code> folder</p> </li> <li> <p><code>TTMenu</code> folder</p> </li> <li> <p><code>SRESET.DAT</code></p> </li> <li> <p><code>YSMenu.nds</code></p> </li> </ul> </li> <li> <p>Place any .nds game ROMs you'd like to play into the <code>Games</code> folder.</p> </li> <li> <p>Insert the SD card back into your cart, plug the cart into your DS, and see if it boots into the menu.</p> </li> </ol> <p>Sakura Kernel</p> <p>Sakura is the official kernel of the M3 DS Real and M3i Zero. It's based on Moonshell 2, with a custom NDS loader. It also offers a couple unique features like RTS (Real-Time-Save), not found in YSMenu. Because it's based on Moonshell2, it also provides media playback directly in the kernel menu, which can be pretty convenient. This tab will help you setup Sakura with YSMenu, so that you can use Sakura as primary and fallback to YSMenu when necessary, for games that don't load in Sakura.</p> <ol> <li> <p>Format the SD card you are using by following the formatting tutorial.</p> </li> <li> <p>Download the Sakura 1.49a kernel.</p> </li> <li> <p>Extract the contents of the Sakura zip to your SD card's root. (It should just be a single <code>SYSTEM</code> folder)</p> </li> <li> <p>If you'd like to be able to use cheats on your games, download a cheat database.</p> </li> <li> <p>You will need the <code>usrcheat.7z</code> file. Extract it using 7-Zip, inside you will find a <code>usrcheat.dat</code> file. Rename this file to <code>cheat_EN.db</code>. Copy the <code>cheat_EN.db</code> file into the <code>SYSTEM</code> folder on your SD card.</p> </li> <li> <p>Next, we'll be adding YSMenu 7.06 to the setup.</p> </li> <li> <p>Download the RetroGameFan YSMenu 7.06 kernel.</p> </li> <li> <p>Extract the YSMenu .7z file you downloaded using 7-Zip, then go into the <code>M3Real_M3iZero YSMenu</code> folder.</p> </li> <li> <p>From this folder, copy the following files/folders to your SD card root:</p> <ul> <li> <p><code>Games</code> folder</p> </li> <li> <p><code>TTMenu</code> folder</p> </li> <li> <p><code>SRESET.DAT</code></p> </li> <li> <p><code>YSMenu.nds</code></p> </li> </ul> </li> <li> <p>Place any .nds game ROMs you'd like to play into the <code>Games</code> folder.</p> </li> <li> <p>Place the SD card back into the cartridge, and boot it up. You'll be asked to select between TouchPod or Sakura, choose whichever you prefer. You can change this later. When you want to use YSMenu, simply launch YSMenu.nds in Sakura/Touchpod.</p> </li> </ol>"},{"location":"cart-guides/n5/","title":"N5","text":""},{"location":"cart-guides/n5/#n5","title":"N5","text":""},{"location":"cart-guides/n5/#dsn5com","title":"dsn5.com","text":"<p>Info</p> <p>This cart is a clone of the original R4SDHC (which is itself a clone of the original R4, with modifications). While it's R4SDHC-related, it doesn't have to chainload YSMenu via its stock kernel. It can directly boot YSMenu as <code>_DS_MENU.DAT</code>, provided the cart's <code>_AX_MENU.DAT</code> file is present.</p> <p>Warning</p> <p>Like the R4SDHC, this cart's SD I/O implementation is wonky since its SDHC I/O code is closely based off of the original R4's I/O, meant for SD class cards rather than SDHC ones. This causes the cart to be unstable with SD cards bigger than 4GB. (It will work with larger cards, but they may cause issues if you use more than 4GB of the SD space. Consider yourself warned.)</p>"},{"location":"cart-guides/n5/#setup-guide","title":"Setup Guide:","text":"<ol> <li> <p>Format the SD card you are using by following the formatting tutorial.</p> </li> <li> <p>Download the N5 YSMenu 7.06 package.</p> </li> <li> <p>Next, extract the contents of the downloaded kernel zip to your SD card.</p> </li> <li> <p>Place any <code>.nds</code> game ROMs you'd like to play into the <code>Games</code> folder.</p> </li> <li> <p>The files on your SD card should now look like this:</p> <ul> <li></li> </ul> </li> <li> <p>Insert the SD back into the cart, plug the cart into the DS, and see if it boots into the menu.</p> </li> </ol>"},{"location":"cart-guides/ncard/","title":"N-Card & Clones","text":""},{"location":"cart-guides/ncard/#n-card-clones","title":"N-Card &amp; Clones","text":""},{"location":"cart-guides/ncard/#n-card-ds-linker-ds-fire-link-ultra-flashpass-ex-neoflash-mk5-ultra-n-card-asnand-asic-carts","title":"N-Card, DS Linker, DS Fire Link, Ultra FlashPass EX, NeoFlash MK5, Ultra N-Card, ASNAND &amp; ASIC Carts.","text":"<p>Note</p> <p>Usage of this guide requires you to have a Slot 2 USB reader for your N-Card and a Nintendo DS or DS Lite system.</p>"},{"location":"cart-guides/ncard/#setup-guide","title":"Setup Guide:","text":"<ol> <li>Insert your GBA Slot-2 writer device for your N-Card/clone into a DS/DS Lite, then connect the writer via USB to your PC.</li> <li> <p>Ensure your cart has previously been updated to udisk 1.45 and is formatted to be work with udisk 1.45 and the 1.45 DLDI driver. </p> <ul> <li>If it has not been updated, download the uDisk v1.45 package and extract the contents of the package to the root of your N-Card, then boot the N-Card using your DS and allow it to upgrade uDisk.</li> </ul> <p>Tip</p> <p>If the N-Card's filesystem is from a uDisk version earlier than 1.45, XuluMenu is likely freeze. However, the N-Card has a recovery menu you can use to resolve this problem - Hold the <code>L</code> + <code>R</code> shoulder buttons while booting the cart, which will bring up the recovery menu. In the menu, press <code>A</code> to boot into the built-in uDisk 1.45 while holding <code>START</code> + <code>SELECT</code> to bring up a format menu where you can perform a full format. Note that this will erase all files on your N-Card! Ensure your games and saves have been backed up beforehand.</p> </li> <li> <p>Download the XuluMenu Package and extract it to a location on your computer.</p> </li> <li>Turn on the DS and boot the cart while holding [L] + [R] + [A] + [B] + [DPad Up] at the same time until you see \"USB SAFE BLOCK\" text on the bottom screen.</li> <li>Navigate into the extracted XuluMenu files on your PC and enter the <code>USB</code> folder. Run the included <code>UpdateCart.cmd</code> batch script to have <code>USBNDS.exe</code> flash the new SRL onto your cart.</li> <li>After the process is complete, reboot and you will see your changes live! The file browser will come up if <code>boot.nds</code> is not present, or if the cart is booted with the <code>B</code> button held.</li> <li>Note that for xMenu to operate correctly you must run uDisk first. You can use uDisk 1.45 as your <code>boot.nds</code> if you wish to auto boot into xMenu. The udisk.srl included in the arm9/binaries source can be used for this purpose. Just copy and rename it to boot.nds to have XuluMenu autoboot it. Or, rename it to <code>udisk.nds</code> if you wish to use something else as boot.nds.</li> </ol> <p>Cart Recovery Options</p> <ul> <li>Holding <code>B</code> while booting the cart will skip auto-booting into the <code>boot.nds</code> file and will instead load a file browser.</li> <li>If fat init fails, the built in uDisk will run. However if fat init hangs, you can boot while holding <code>L</code> + <code>R</code> shoulder buttons to bring up the recovery menu that will let you boot into built in uDisk 1.45.</li> <li>Booting into the built in uDisk from recovery menu while holding <code>START</code> + <code>SELECT</code> will load uDisk's format menu. You can use this feature to reformat your cart's file system if necessary.</li> </ul>"},{"location":"cart-guides/r4christmas/","title":"R4SDHC Christmas","text":""},{"location":"cart-guides/r4christmas/#r4sdhc-christmas-r4-sdhc-happybox","title":"R4SDHC Christmas / R4 SDHC HappyBox","text":""},{"location":"cart-guides/r4christmas/#r4isdhccom","title":"r4isdhc.com","text":"<p>Warning</p> <p>This cart is an R4SDHC clone, and like the R4SDHC, SD I/O implementation is wonky since its SDHC I/O code is closely based off of the original R4's I/O, meant for SD class cards rather than SDHC ones. This causes the cart to be unstable with SD cards bigger than 4GB. (It will work with larger cards, but they may cause issues if you use more than 4GB of the SD space. Consider yourself warned.)</p>"},{"location":"cart-guides/r4christmas/#setup-guide","title":"Setup Guide:","text":"<ol> <li> <p>Format the SD card you are using by following the formatting tutorial.</p> </li> <li> <p>Download the R4SDHC Christmas YSMenu package.</p> </li> <li> <p>Next, extract the contents of the downloaded kernel zip to your SD card.</p> </li> <li> <p>Place any <code>.nds</code> game ROMs you'd like to play into the <code>Games</code> folder.</p> </li> <li> <p>The files on your SD card should now look like this:</p> <ul> <li></li> </ul> </li> <li> <p>Insert the SD back into the cart, plug the cart into the DS, and see if it boots into the menu.</p> </li> </ol>"},{"location":"cart-guides/r4deluxe/","title":"R4 Deluxe","text":""},{"location":"cart-guides/r4deluxe/#r4-deluxe","title":"R4 Deluxe","text":""},{"location":"cart-guides/r4deluxe/#r4deluxecom","title":"r4deluxe.com","text":"<p>Info</p> <p>This cart is a clone of the N5 (which is itself a clone of the R4SDHC). While it's R4SDHC-related, it doesn't have to load YSMenu via it's stock kernel. It can directly boot YSMenu as <code>_DS_MENU.DAT</code>, provided the cart's <code>_AX_MENU.DAT</code> file is present.</p> <p>Warning</p> <p>Like the R4SDHC, this cart's SD I/O implementation is wonky since its SDHC I/O code is closely based off of the original R4's I/O, meant for SD class cards rather than SDHC ones. This causes the cart to be unstable with SD cards bigger than 4GB. (It will work with larger cards, but they may cause issues if you use more than 4GB of the SD space. Consider yourself warned.)</p>"},{"location":"cart-guides/r4deluxe/#setup-guide","title":"Setup Guide:","text":"<ol> <li> <p>Format the SD card you are using by following the formatting tutorial.</p> </li> <li> <p>Download the R4 Deluxe YSMenu 7.06 package.</p> </li> <li> <p>Next, extract the contents of the downloaded kernel zip to your SD card.</p> </li> <li> <p>Place any <code>.nds</code> game ROMs you'd like to play into the <code>Games</code> folder.</p> </li> <li> <p>The files on your SD card should now look like this:</p> <ul> <li></li> </ul> </li> <li> <p>Insert the SD back into the cart, plug the cart into the DS, and see if it boots into the menu.</p> </li> </ol>"},{"location":"cart-guides/r4ds/","title":"Original R4 & M3 Simply","text":""},{"location":"cart-guides/r4ds/#original-r4-m3-simply","title":"Original R4 &amp; M3 Simply","text":""},{"location":"cart-guides/r4ds/#r4dscom-m3adaptercom","title":"r4ds.com / m3adapter.com","text":"<p>Warning</p> <p>These carts are limited to SD-class cards, meaning only up to 2GB size cards will work. SDHC and SDXC (cards above 2GB) will not work.</p> <p>Info</p> <p>The M3 Simply has identical hardware to an original R4. Therefore, it can use the same WoodR4 kernel!</p>"},{"location":"cart-guides/r4ds/#setup-guide","title":"Setup Guide:","text":"<ol> <li> <p>Format the SD card you are using by following the formatting tutorial.</p> </li> <li> <p>Download the R4DS WoodR4 1.62 kernel.</p> </li> <li> <p>Open/extract the zip file, then copy <code>__rpg</code> and <code>_DS_MENU.DAT</code> into the root of your SD card.</p> </li> <li> <p>If you'd like to be able to use cheats on your games, download a cheat database.</p> </li> <li> <p>You will need the <code>usrcheat.7z</code> file. Extract it using 7-Zip, inside you will find a <code>usrcheat.dat</code> file. Copy this file to <code>__rpg/cheats/</code> on your SD card. (Create the <code>cheats</code> folder if it doesn't exist)</p> </li> <li> <p>Create a <code>Games</code> folder in your SD card root, and place your <code>.nds</code> game ROMs inside. You can also create additional folders to help with organizing/categorizing your ROMs.</p> </li> <li> <p>The files on your SD card should now look like this:</p> <ul> <li></li> </ul> </li> <li> <p>Insert the SD card back into your cart, plug the cart into your DS, and see if it boots into the menu.</p> </li> </ol> <p>Tip</p> <p>Since this cart is fairly size-constrained with the 2GB limitation, you may want to consider trimming your NDS roms with NDSTokyoTrim. This will trim off the extra unused data from your NDS ROMs, saving you SD card space at no cost!</p> <p>Themes</p> <p>Looking to change the default theme? Check out the themes repository at themes.flashcarts.net!</p>"},{"location":"cart-guides/r4dspro/","title":"R4DS Pro","text":""},{"location":"cart-guides/r4dspro/#r4ds-pro","title":"R4DS Pro","text":""},{"location":"cart-guides/r4dspro/#r4dsprocom","title":"r4dspro.com","text":"<p>Known Issues</p> <p>While this cart can reliably play games for the most part, it has a few problems due to its flawed hardware:</p> <ol> <li> <p>The SD access on this cart is fairly slow due to being limited to single-block writes. (If a multi-block DLDI is used, the SD card filesystem gets corrupted)</p> </li> <li> <p>Like the EZ-Flash Parallel, sleep mode on this cart is broken. Closing the DS lid causes the screen to turn off, but the game continues to run.</p> </li> <li> <p>BL2CK on this cart also has a few minor issues with some games, that don't occur on other BL2CK-supported carts. For example in New Super Mario Bros, the minigames do not work.</p> </li> <li> <p>Attempting to use the WFC settings panel (Found in games that support online multiplayer), can cause the console to crash.</p> </li> </ol> <p>Warning</p> <p>Never attempt to use YSMenu on the R4DS Pro! You will brick the cart!</p>"},{"location":"cart-guides/r4dspro/#setup-guide","title":"Setup Guide:","text":"<ol> <li> <p>Format the SD card you are using by following the formatting tutorial.</p> </li> <li> <p>Download the R4DSPro BL2CK 1.31.0 kernel.</p> </li> <li> <p>Open/extract the zip file, and copy the contents into the root of your SD card.</p> </li> <li> <p>If you'd like to be able to use cheats on your games, download a cheat database.</p> </li> <li> <p>You will need the <code>usrcheat.7z</code> file. Extract it using 7-Zip, inside you will find a <code>usrcheat.dat</code> file. Copy this file to <code>__rpg/cheats/</code> on your SD card. (Create the <code>cheats</code> folder if it doesn't exist)</p> </li> <li> <p>Create a <code>Games</code> folder in your SD card root, and place your <code>.nds</code> game ROMs inside. You can also create additional folders to help with organizing/categorizing your ROMs.</p> </li> <li> <p>The files on your SD card should now look like this:</p> <ul> <li></li> </ul> </li> <li> <p>Insert the SD card back into your cart, plug the cart into your DS, and see if it boots into the menu.</p> </li> </ol> <p>Themes</p> <p>Looking to change the default theme? Check out the themes repository at themes.flashcarts.net!</p>"},{"location":"cart-guides/r4i-sdhc/","title":"DSTTi DEMON-HW Carts","text":""},{"location":"cart-guides/r4i-sdhc/#dstti-demon-hw-carts-aka-timebomb-carts","title":"DSTTi DEMON-HW Carts (AKA Timebomb Carts)","text":""},{"location":"cart-guides/r4i-sdhc/#r4isdhccom-2014-r4i-sdhccom-r4i-goldeu-and-others","title":"r4isdhc.com 2014+, r4i-sdhc.com, r4i-gold.eu, and others","text":"R4iMenuYSMenuAKMenu-Next <p>Kernel Info</p> <p>R4iMenu is compatible with r4i-sdhc.com and r4isdhc.com (2014+) carts. All other DEMON-HW based carts can use YSMenu instead.</p> <p>Since the timebomb previously found in R4iMenu has been removed, it has become a good option for users that own supported carts, as it has better game compatibility than YSMenu, and supports Real-Time-Save. R4iMenu is also a decent kernel for playing romhacks and translation-patched games, as YSMenu can struggle to run those.</p> <p>YSMenu runs on all DEMON-HW carts. If you prefer the look and feel of YSMenu, you can choose to use it over R4iMenu, even if you have an R4iMenu-supported cart.</p> <p>Kernel Info</p> <p>See YSMenu Compatibility List's <code>DEMON DSTTi Clones</code> section for a full list of compatible carts.</p> <p>YSMenu is a simple, fast, and stable kernel, featuring a menu UI resembling the original R4. It's a great choice for most DSTT-based flashcart users. However, it does lack RTS (Real Time Save), so check out the R4iMenu tab if that is something you're interested in.</p> <p>Kernel Info</p> <p>AKMenu-Next is an alternative kernel based on akmenu4 (used in Wood R4 and AKAIO) and uses nds-bootstrap to load games. This is an option if you have games, ROM hacks or fan translations that do not work on YSMenu or R4iMenu, and is also an option if you want a Wood R4 style interface.</p> <ol> <li> <p>Download the latest release of AKMenu-Next Flashcart Edition.</p> </li> <li> <p>Extract the downloaded <code>akmenu-next-flashcart.zip</code> file with 7-Zip.</p> </li> <li> <p>From within the akmenu-next files, copy the following files/folders to your SD card root:</p> <ul> <li><code>_nds</code> folder</li> <li><code>BOOT.NDS</code></li> </ul> </li> <li> <p>Download the latest release of nds-bootstrap.</p> </li> <li> <p>Extract the downloaded <code>nds-bootstrap.zip</code> file with 7-Zip.</p> </li> <li> <p>Copy the contents of the files from the extracted <code>nds-bootstrap.zip</code> file to the <code>_nds</code> folder on your SD card.</p> </li> <li> <p>If you'd like to be able to use cheats on your games, download a cheat database.</p> </li> <li> <p>You will need the <code>usrcheat.7z</code> file. Extract it using 7-Zip, inside you will find a <code>usrcheat.dat</code> file. Copy this file to <code>_nds/akmenunext/cheats/</code> on your SD card. (Create the <code>cheats</code> folder if it doesn't exist)</p> </li> <li> <p>Open the <code>Autoboot</code> folder within the AKMenu-Next files.</p> </li> <li> <p>Copy the contents of the <code>R4i-SDHC</code> folder (do not copy the folder itself) to the root of your SD card.</p> </li> <li> <p>Create a <code>Games</code> folder in your SD card root, and place your <code>.nds</code> game ROMs inside. You can also create additional folders to help with organizing/categorizing your ROMs.</p> </li> <li> <p>The files on your SD card should now look like this:</p> <ul> <li></li> </ul> </li> <li> <p>Insert the SD card back into your cart, plug the cart into your DS, and see if it boots into the menu.</p> </li> </ol> <p>Themes</p> <p>Looking to change the default theme? Check out the themes repository at themes.flashcarts.net!</p> <p>Timebombs</p> <p>While some old versions of the stock kernel have timebombs (error that triggers past a certain date), neither YSMenu nor the versions of R4iMenu provided in this guide have one.</p> <p>If you'd like to learn more about flashcart timebombs and what they do, check out the Timebomb Misconceptions page on Flashcarts.net!</p>"},{"location":"cart-guides/r4i-sdhc/#setup-guide","title":"Setup Guide:","text":"<ol> <li> <p>Format the SD card you are using by following the formatting tutorial.</p> </li> <li> <p>Download the appropriate kernel for your cart below:</p> <ul> <li> <p>r4isdhc.com v4.3b kernel</p> </li> <li> <p>r4i-sdhc.com v1.87b kernel</p> </li> </ul> </li> <li> <p>Next, extract the contents of the downloaded kernel zip to your SD card.</p> </li> <li> <p>Create a <code>Games</code> folder in your SD card root, and place any <code>.nds</code> game ROMs you'd like to play inside.</p> </li> <li> <p>The files on your SD card should now look like this:</p> <ul> <li></li> </ul> </li> <li> <p>Insert the SD back into the cart, plug the cart into the DS, and see if it boots into the menu.</p> </li> </ol>"},{"location":"cart-guides/r4i-sdhc/#setup-guide_1","title":"Setup Guide:","text":"<ol> <li> <p>Format the SD card you are using by following the formatting tutorial.</p> </li> <li> <p>Download the RetroGameFan YSMenu 7.06 kernel.</p> </li> <li> <p>Extract the YSMenu .7z file you downloaded using 7-Zip, then go into the <code>DSTTi-Clone YSMenu</code> folder.</p> </li> <li> <p>From this folder, copy the following files/folders to your SD card root:</p> <ul> <li> <p><code>Games</code> folder</p> </li> <li> <p><code>TTMenu</code> folder</p> </li> <li> <p><code>TTMenu.dat</code></p> </li> </ul> </li> <li> <p>Download this <code>R4.dat</code>, and place it in SD card root as well.</p> </li> <li> <p>Place any <code>.nds</code> game ROMs you'd like to play into the <code>Games</code> folder.</p> </li> <li> <p>The files on your SD card should now look like this:</p> <ul> <li></li> </ul> </li> <li> <p>Insert the SD card back into your cart, plug the cart into your DS, and see if it boots into the menu.</p> </li> </ol>"},{"location":"cart-guides/r4i_christmas/","title":"R4i SDHC Christmas","text":""},{"location":"cart-guides/r4i_christmas/#r4i-sdhc-christmas-ds-happybox-v14","title":"R4i SDHC Christmas / DS HappyBox v1.4","text":""},{"location":"cart-guides/r4i_christmas/#r4isdhccom","title":"r4isdhc.com","text":"<p>Warning</p> <p>This cart is an R4SDHC clone, and like the R4SDHC, SD I/O implementation is wonky since its SDHC I/O code is closely based off of the original R4's I/O, meant for SD class cards rather than SDHC ones. This causes the cart to be unstable with SD cards bigger than 4GB. (It will work with larger cards, but they may cause issues if you use more than 4GB of the SD space. Consider yourself warned.)</p> <p>It can also behave as a DSTT in some scenarios when it detects DSi/3DS hardware. This is why the package below includes the original kernel configured to autoboot YSMenu, so that YSMenu is able to boot even if the cart loads into DSTT mode.</p>"},{"location":"cart-guides/r4i_christmas/#setup-guide","title":"Setup Guide:","text":"<ol> <li> <p>Format the SD card you are using by following the formatting tutorial.</p> </li> <li> <p>Download the R4i SDHC Christmas YSMenu package.</p> </li> <li> <p>Next, extract the contents of the downloaded kernel zip to your SD card.</p> </li> <li> <p>Place any <code>.nds</code> game ROMs you'd like to play into the <code>Games</code> folder.</p> </li> <li> <p>The files on your SD card should now look like this:</p> <ul> <li></li> </ul> </li> <li> <p>Insert the SD back into the cart, plug the cart into the DS, and see if it boots into the menu.</p> </li> </ol>"},{"location":"cart-guides/r4i_sdhc_v1.4/","title":"R4i SDHC V1.4","text":""},{"location":"cart-guides/r4i_sdhc_v1.4/#r4i-sdhc-v14","title":"R4i SDHC v1.4","text":""},{"location":"cart-guides/r4i_sdhc_v1.4/#r4sdhccom","title":"r4sdhc.com","text":"<p>Warning</p> <p>This cart is an R4SDHC clone, and like the R4SDHC, SD I/O implementation is wonky since its SDHC I/O code is closely based off of the original R4's I/O, meant for SD class cards rather than SDHC ones. This causes the cart to be unstable with SD cards bigger than 4GB. (It will work with larger cards, but they may cause issues if you use more than 4GB of the SD space. Consider yourself warned.)</p> <p>Note</p> <p>This cart can behave as a DSTT in some scenarios when it detects DSi/3DS hardware. This is why the package below includes both the original kernel and YSMenu, because no solution to make YSMenu the default kernel is guaranteed to work, given that the cart can switch between hardware modes depending on its boot environment. You can choose to use either the stock kernel or YSMenu, whichever is more convenient. If a game fails to boot on the stock kernel, load <code>YSMENU.NDS</code> to launch YSMenu, then launch the game in YSMenu.</p>"},{"location":"cart-guides/r4i_sdhc_v1.4/#setup-guide","title":"Setup Guide:","text":"<ol> <li> <p>Format the SD card you are using by following the formatting tutorial.</p> </li> <li> <p>Download the R4i SDHC V1.4 package.</p> </li> <li> <p>Next, extract the contents of the downloaded kernel zip to your SD card.</p> </li> <li> <p>Create a <code>Games</code> folder in your SD card root. You can also create additional folders to help with organizing/categorizing your ROMs.</p> </li> <li> <p>Place any <code>.nds</code> game ROMs you'd like to play into the <code>Games</code> folder.</p> </li> <li> <p>The files on your SD card should now look like this :</p> <ul> <li></li> </ul> </li> <li> <p>Insert the SD back into the cart, plug the cart into the DS, and see if it boots into the menu.</p> </li> </ol>"},{"location":"cart-guides/r4ids_cn/","title":"R4i+ Gold & R4i 3DS RTS","text":""},{"location":"cart-guides/r4ids_cn/#r4i-3dsds-gold-r4i-3ds-rts","title":"R4i+ 3DS/DS Gold &amp; R4i 3DS RTS","text":""},{"location":"cart-guides/r4ids_cn/#r4idscn","title":"r4ids.cn","text":""},{"location":"cart-guides/r4ids_cn/#setup-guide","title":"Setup Guide:","text":"<ol> <li> <p>Format the SD card you are using by following the formatting tutorial.</p> </li> <li> <p>Download the R4iDS WoodR4 1.64 kernel.</p> </li> <li> <p>Open/extract the zip file, and copy the contents into the root of your SD card.</p> </li> <li> <p>If you'd like to be able to use cheats on your games, download a cheat database.</p> </li> <li> <p>You will need the <code>usrcheat.7z</code> file. Extract it using 7-Zip, inside you will find a <code>usrcheat.dat</code> file. Copy this file to <code>__rpg/cheats/</code> on your SD card. (Create the <code>cheats</code> folder if it doesn't exist)</p> </li> <li> <p>Create a <code>Games</code> folder in your SD card root, and place your <code>.nds</code> game ROMs inside. You can also create additional folders to help with organizing/categorizing your ROMs.</p> </li> <li> <p>Insert the SD card back into your cart, plug the cart into your DS, and see if it boots into the menu.</p> </li> </ol> <p>Tip</p> <p>If you are unable to get any games to load in WoodR4, you may have one of the last-batch carts with faulty DS mode. If that's the case, you'll need to setup BL2CK instead.</p> <p>Themes</p> <p>Looking to change the default theme? Check out the themes repository at themes.flashcarts.net!</p>"},{"location":"cart-guides/r4ids_cn_non_3ds/","title":"R4i Gold","text":""},{"location":"cart-guides/r4ids_cn_non_3ds/#r4i-gold-non-3ds-version","title":"R4i Gold (Non-3DS Version)","text":""},{"location":"cart-guides/r4ids_cn_non_3ds/#r4idscn","title":"r4ids.cn","text":""},{"location":"cart-guides/r4ids_cn_non_3ds/#setup-guide","title":"Setup Guide:","text":"<ol> <li> <p>Format the SD card you are using by following the formatting tutorial.</p> </li> <li> <p>Download the R4iDS WoodR4 1.54 kernel.</p> </li> <li> <p>Open/extract the zip file, and copy the contents into the root of your SD card.</p> </li> <li> <p>If you'd like to be able to use cheats on your games, download a cheat database.</p> </li> <li> <p>You will need the <code>usrcheat.7z</code> file. Extract it using 7-Zip, inside you will find a <code>usrcheat.dat</code> file. Copy this file to <code>__rpg/cheats/</code> on your SD card. (Create the <code>cheats</code> folder if it doesn't exist)</p> </li> <li> <p>Create a <code>Games</code> folder in your SD card root, and place your <code>.nds</code> game ROMs inside. You can also create additional folders to help with organizing/categorizing your ROMs.</p> </li> <li> <p>Insert the SD card back into your cart, plug the cart into your DS, and see if it boots into the menu.</p> </li> </ol> <p>Themes</p> <p>Looking to change the default theme? Check out the themes repository at themes.flashcarts.net!</p>"},{"location":"cart-guides/r4ids_com/","title":"R4iDS.com Original","text":""},{"location":"cart-guides/r4ids_com/#r4idscom-original","title":"R4iDS.com Original","text":""},{"location":"cart-guides/r4ids_com/#r4idscom","title":"r4ids.com","text":""},{"location":"cart-guides/r4ids_com/#setup-guide","title":"Setup Guide:","text":"<ol> <li> <p>Format the SD card you are using by following the formatting tutorial.</p> </li> <li> <p>Download the R4iDS.com WoodR4 1.54 kernel.</p> </li> <li> <p>Open/extract the zip file, and copy the contents into the root of your SD card.</p> </li> <li> <p>If you'd like to be able to use cheats on your games, download a cheat database.</p> </li> <li> <p>You will need the <code>usrcheat.7z</code> file. Extract it using 7-Zip, inside you will find a <code>usrcheat.dat</code> file. Copy this file to <code>__rpg/cheats/</code> on your SD card. (Create the <code>cheats</code> folder if it doesn't exist)</p> </li> <li> <p>Create a <code>Games</code> folder in your SD card root, and place your <code>.nds</code> game ROMs inside. You can also create additional folders to help with organizing/categorizing your ROMs.</p> </li> <li> <p>Insert the SD card back into your cart, plug the cart into your DS, and see if it boots into the menu.</p> </li> </ol> <p>Themes</p> <p>Looking to change the default theme? Check out the themes repository at themes.flashcarts.net!</p>"},{"location":"cart-guides/r4ids_com_2_0/","title":"R4i Gold 2.0","text":""},{"location":"cart-guides/r4ids_com_2_0/#r4i-gold-20","title":"R4i Gold 2.0","text":""},{"location":"cart-guides/r4ids_com_2_0/#r4idscom","title":"r4ids.com","text":"<p>Info</p> <p>This cart is an Acekard 2i clone that has an AKAIO build available.</p>"},{"location":"cart-guides/r4ids_com_2_0/#setup-guide","title":"Setup Guide:","text":"<ol> <li> <p>Format the SD card you are using by following the formatting tutorial.</p> </li> <li> <p>Download the R4iDS.com AKAIO 1.8.6a kernel.</p> </li> <li> <p>Open/extract the zip file, and copy the contents into the root of your SD card.</p> </li> <li> <p>If you'd like to be able to use cheats on your games, download a cheat database.</p> </li> <li> <p>You will need the <code>usrcheat.7z</code> file. Extract it using 7-Zip, inside you will find a <code>usrcheat.dat</code> file. Copy this file to <code>__aio/cheats/</code> on your SD card. (Create the <code>cheats</code> folder if it doesn't exist)</p> </li> <li> <p>Create a <code>Games</code> folder in your SD card root, and place your <code>.nds</code> game ROMs inside. You can also create additional folders to help with organizing/categorizing your ROMs.</p> </li> <li> <p>Insert the SD card back into your cart, plug the cart into your DS, and see if it boots into the menu.</p> </li> </ol> <p>Themes</p> <p>Looking to change the default theme? Check out the themes repository at themes.flashcarts.net!</p>"},{"location":"cart-guides/r4igold_cc/","title":"Original R4iGold.cc","text":""},{"location":"cart-guides/r4igold_cc/#original-r4igoldcc","title":"Original R4iGold.cc","text":""},{"location":"cart-guides/r4igold_cc/#r4igoldcc","title":"r4igold.cc","text":"<p>Info</p> <p>The original r4igold.cc cart is a clone of the Galaxy Eagle. Unfortunately, the Galaxy Eagle itself is a bad clone of the Acekard 2i, and neither AKAIO nor BL2CK work properly on it. While BL2CK boots, it will freeze on a white screen when attempting to load any commercial ROM file. Therefore, AKMenu-Next is the recommended primary kernel for Galaxy Eagle and related carts, so that nds-bootstrap can be used to load games. As an alternative option, the stock kernel is also provided, but it will likely be able to run less games than AKMenu-Next.</p>"},{"location":"cart-guides/r4igold_cc/#setup-guide","title":"Setup Guide:","text":"AKMenu-NextR4iGold.cc v2.6 <ol> <li> <p>Download the latest release of AKMenu-Next Flashcart Edition.</p> </li> <li> <p>Extract the downloaded <code>akmenu-next-flashcart.zip</code> file with 7-Zip.</p> </li> <li> <p>From within the akmenu-next files, copy the following files/folders to your SD card root:</p> <ul> <li><code>_nds</code> folder</li> <li><code>BOOT.NDS</code></li> </ul> </li> <li> <p>Download the latest release of nds-bootstrap.</p> </li> <li> <p>Extract the downloaded <code>nds-bootstrap.zip</code> file with 7-Zip.</p> </li> <li> <p>Copy the contents of the files from the extracted <code>nds-bootstrap.zip</code> file to the <code>_nds</code> folder on your SD card.</p> </li> <li> <p>If you'd like to be able to use cheats on your games, download a cheat database.</p> </li> <li> <p>You will need the <code>usrcheat.7z</code> file. Extract it using 7-Zip, inside you will find a <code>usrcheat.dat</code> file. Copy this file to <code>_nds/akmenunext/cheats/</code> on your SD card. (Create the <code>cheats</code> folder if it doesn't exist)</p> </li> <li> <p>Open the <code>Autoboot</code> folder within the AKMenu-Next files.</p> </li> <li> <p>Copy the contents of the <code>Galaxy Eagle</code> folder (do not copy the folder itself) to the root of your SD card.</p> </li> <li> <p>Create a <code>Games</code> folder in your SD card root, and place your <code>.nds</code> game ROMs inside. You can also create additional folders to help with organizing/categorizing your ROMs.</p> </li> <li> <p>The files on your SD card should now look like this:</p> <ul> <li></li> </ul> </li> <li> <p>Insert the SD card back into your cart, plug the cart into your DS, and see if it boots into the menu.</p> </li> </ol> <p>Themes</p> <p>Looking to change the default theme? Check out the themes repository at themes.flashcarts.net!</p> <p>Kernel Info</p> <p>Keep in mind that this kernel is outdated. Some newer games will refuse to boot, but this is useable alternative if AKMenu-Next's nds-bootstrap loader fails to load something.</p> <ol> <li> <p>Format the SD card you are using by following the formatting tutorial.</p> </li> <li> <p>Download the R4iGold.cc v2.6 kernel.</p> </li> <li> <p>Open/extract the zip file, and copy the contents into the root of your SD card.</p> </li> <li> <p>If you'd like to be able to use cheats on your games, download a cheat database.</p> </li> <li> <p>You will need the <code>usrcheat.7z</code> file. Extract it using 7-Zip, inside you will find a <code>usrcheat.dat</code> file. </p> </li> <li> <p>Rename the <code>usrcheat.dat</code> file to <code>cheat.dat</code>.</p> </li> <li> <p>Copy <code>cheat.dat</code> into the <code>_SYSTEM_</code> folder.</p> </li> <li> <p>Create a <code>Games</code> folder in your SD card root, and place your <code>.nds</code> game ROMs inside. You can also create additional folders to help with organizing/categorizing your ROMs.</p> </li> <li> <p>The files on your SD card should now look like this:</p> <ul> <li></li> </ul> </li> <li> <p>Insert the SD card back into your cart, plug the cart into your DS, and see if it boots into the menu.</p> </li> </ol>"},{"location":"cart-guides/r4rts/","title":"R4i SDHC RTS","text":""},{"location":"cart-guides/r4rts/#r4i-sdhc-rts","title":"R4i SDHC RTS","text":""},{"location":"cart-guides/r4rts/#r4rtscom","title":"r4rts.com","text":"<p>Info</p> <p>These carts are clones of the M3 DS Real cart. They advertised RTS support in their stock kernel, similar to the M3's RTS support in its Sakura kernel. As the cart is M3 hardware at the end of the day, it's compatible with M3 YSMenu after being booted with Lifehackerhansol's flashcart-bootstrap. A package containing the bootstrap and YSMenu for this cart is provided in the setup instructions below.</p>"},{"location":"cart-guides/r4rts/#setup-guide","title":"Setup Guide:","text":"<ol> <li> <p>Format the SD card you are using by following the formatting tutorial.</p> </li> <li> <p>Download the r4rts.com YSMenu 7.06 package.</p> </li> <li> <p>Next, extract the contents of the downloaded kernel zip to your SD card.</p> </li> <li> <p>Place any <code>.nds</code> game ROMs you'd like to play into the <code>Games</code> folder.</p> </li> <li> <p>Insert the SD back into the cart, plug the cart into the DS, and see if it boots into the menu.</p> </li> </ol> <p>Tip</p> <p>If you'd like to use RTS (Real-Time-Save), you can also use the cart's stock kernel, provided below. Do keep in mind though that game compatibility won't be as good as YSMenu, and the RTS feature itself can be hit-or-miss.</p> <ul> <li>Download r4rts.com Kernel 2.8a</li> </ul>"},{"location":"cart-guides/r4sdhc/","title":"Original R4SDHC","text":""},{"location":"cart-guides/r4sdhc/#original-r4sdhc","title":"Original R4SDHC","text":""},{"location":"cart-guides/r4sdhc/#r4sdhccom-ndslr4com","title":"r4sdhc.com, ndslr4.com","text":"<p>Warning</p> <p>This cart's SD I/O implementation is wonky since its SDHC I/O code is closely based off of the original R4's I/O, meant for SD class cards rather than SDHC ones. This causes the cart to be unstable with SD cards bigger than 4GB. (It will work with larger cards, but they will likely cause issues if you use more than 4GB of the SD space. Consider yourself warned.)</p>"},{"location":"cart-guides/r4sdhc/#setup-guide","title":"Setup Guide:","text":"<ol> <li> <p>Format the SD card you are using by following the formatting tutorial.</p> </li> <li> <p>Download the R4SDHC YSMenu package.</p> </li> <li> <p>Next, extract the contents of the downloaded kernel zip to your SD card.</p> </li> <li> <p>Place any <code>.nds</code> game ROMs you'd like to play into the <code>Games</code> folder.</p> </li> <li> <p>The files on your SD card should now look like this:</p> <ul> <li></li> </ul> </li> <li> <p>Insert the SD back into the cart, plug the cart into the DS, and see if it boots into the menu.</p> </li> </ol> <p>Info and Credits</p> <p>This YSMenu package contains quite a few fixes and improvements. In the past, YSMenu needed to be chainloaded via the stock kernel. However thanks to Deletecat at DSi Mode Hacking Discord, a new way to load YSMenu on these carts was found, by hex-editing a flashcard-bootstrap binary into the original kernel's <code>_ds_menu.dat</code> file.</p> <p>A full list of improvements in this package:</p> <ul> <li>R4SDHC Bootstrap to load TTMenu.dat - Deletecat &amp; Lifehackerhansol</li> <li>Fixed r4dldi.dat for homebrew - Lifehackerhansol</li> <li>Fixed ttreset.dat soft-reset - twiztidsinz on GBATemp</li> <li>YSMenu theme - ShaolinAssassin on DeviantArt</li> </ul>"},{"location":"cart-guides/r4ultra/","title":"R4 Ultra/R4i Ultra","text":""},{"location":"cart-guides/r4ultra/#r4-ultrar4i-ultra","title":"R4 Ultra/R4i Ultra","text":""},{"location":"cart-guides/r4ultra/#r4ultracom","title":"r4ultra.com","text":"<p>Info</p> <p>This cart is an Acekard 2i clone that has an AKAIO build available.</p>"},{"location":"cart-guides/r4ultra/#setup-guide","title":"Setup Guide:","text":"<ol> <li> <p>Format the SD card you are using by following the formatting tutorial.</p> </li> <li> <p>Download the R4 Ultra AKAIO 1.8.6a kernel.</p> </li> <li> <p>Open/extract the zip file, and copy the contents into the root of your SD card.</p> </li> <li> <p>If you'd like to be able to use cheats on your games, download a cheat database.</p> </li> <li> <p>You will need the <code>usrcheat.7z</code> file. Extract it using 7-Zip, inside you will find a <code>usrcheat.dat</code> file. Copy this file to <code>__aio/cheats/</code> on your SD card. (Create the <code>cheats</code> folder if it doesn't exist)</p> </li> <li> <p>Create a <code>Games</code> folder in your SD card root, and place your <code>.nds</code> game ROMs inside. You can also create additional folders to help with organizing/categorizing your ROMs.</p> </li> <li> <p>The files on your SD card should now look like this:</p> <ul> <li></li> </ul> </li> <li> <p>Insert the SD card back into your cart, plug the cart into your DS, and see if it boots into the menu.</p> </li> </ol> <p>Themes</p> <p>Looking to change the default theme? Check out the themes repository at themes.flashcarts.net!</p>"},{"location":"cart-guides/r4upgrade/","title":"R4-III / R4 Upgrade","text":""},{"location":"cart-guides/r4upgrade/#r4-iii-r4-upgrade","title":"R4-III / R4 Upgrade","text":""},{"location":"cart-guides/r4upgrade/#r4dslnet-r4-dslnet-r4iiinewcom-r4iiicom","title":"r4dsl.net, r4-dsl.net, r4iiinew.com, r4iii.com","text":"<p>Info</p> <p>These carts are usually either N5 or R4SDHC clones. The r4dsl.net/r4iii.com variant is an N5 clone, and will load any nds file as <code>_DS_MENU.DAT</code>, provided the cart's <code>_R4__III.DAT</code> file is present on the SD card root. The <code>_R4_III.DAT</code> file is essentially the same thing as the N5's <code>_AX_MENU.DAT</code>. The r4-dsl.net variant is an R4SDHC clone, but doesn't need any bootstrap to load YSMenu. It can directly boot any nds file as <code>_DS_MENU.DAT</code>, no other files needed.</p> <p>Because both cart variants end up loading <code>_DS_MENU.DAT</code>, this package is compatible with both. If you'd like to know which variant you have, try deleting <code>_R4__III.DAT</code> from your SD card and check whether or not the cart still boots. If it does, it's an r4-dsl.net cart. If it doesn't boot without the file, it's an r4dsl.net cart.</p> <p>Warning</p> <p>Like the R4SDHC, this cart's SD I/O implementation is wonky since its SDHC I/O code is closely based off of the original R4's I/O, meant for SD class cards rather than SDHC ones. This causes the cart to be unstable with SD cards bigger than 4GB. (It will work with larger cards, but they may cause issues if you use more than 4GB of the SD space. Consider yourself warned.)</p>"},{"location":"cart-guides/r4upgrade/#setup-guide","title":"Setup Guide:","text":"<ol> <li> <p>Format the SD card you are using by following the formatting tutorial.</p> </li> <li> <p>Download the R4-III/Upgrade YSMenu package.</p> </li> <li> <p>Next, extract the contents of the downloaded kernel zip to your SD card.</p> </li> <li> <p>Place any <code>.nds</code> game ROMs you'd like to play into the <code>Games</code> folder.</p> </li> <li> <p>The files on your SD card should now look like this:</p> <ul> <li></li> </ul> </li> <li> <p>Insert the SD back into the cart, plug the cart into the DS, and see if it boots into the menu.</p> </li> </ol>"},{"location":"cart-guides/rts_black/","title":"R4iSDHC RTS Black","text":""},{"location":"cart-guides/rts_black/#r4isdhc-rts-black","title":"R4iSDHC RTS Black","text":""},{"location":"cart-guides/rts_black/#r4isdhccom","title":"r4isdhc.com","text":"<p>Info</p> <p>These carts are clones of the M3 DS Real cart. They advertised RTS support in their stock kernel, similar to the M3's RTS support in its Sakura kernel. As the cart is M3 hardware at the end of the day, it's compatible with M3 YSMenu after being booted with Lifehackerhansol's flashcart-bootstrap. A package containing the bootstrap and YSMenu for this cart is provided in the setup instructions below.</p> <p>Warning</p> <p>This does not apply to the 2025 r4isdhc.com Black RTS cart! Those carts are regular DEMON-HW DSTTi clones, like the rest of the 2014+ r4isdhc.com carts. If you have this cart, please see this page for setup instead.</p>"},{"location":"cart-guides/rts_black/#setup-guide","title":"Setup Guide:","text":"<ol> <li> <p>Format the SD card you are using by following the formatting tutorial.</p> </li> <li> <p>Download the r4isdhc.com RTS Black YSMenu 7.06 package.</p> </li> <li> <p>Next, extract the contents of the downloaded kernel zip to your SD card.</p> </li> <li> <p>Place any <code>.nds</code> game ROMs you'd like to play into the <code>Games</code> folder.</p> </li> <li> <p>Insert the SD back into the cart, plug the cart into the DS, and see if it boots into the menu.</p> </li> </ol> <p>Tip</p> <p>If you'd like to use RTS (Real-Time-Save), you can also use the cart's stock kernel, provided below. Do keep in mind though that game compatibility won't be as good as YSMenu, and the RTS feature itself can be hit-or-miss.</p> <ul> <li>Download r4isdhc.com RTS Black Kernel 3.2</li> </ul>"},{"location":"cart-guides/stargate/","title":"Stargate 3DS","text":""},{"location":"cart-guides/stargate/#stargate-3ds","title":"Stargate 3DS","text":""},{"location":"cart-guides/stargate/#stargate-3dscom","title":"stargate-3ds.com","text":"<p>Important Info</p> <p>The Stargate 3DS is not as capable as full 3DS custom firmware (Luma3DS), and has some drawbacks:</p> <ul> <li> <p>For 3DS games, ONLY <code>.3ds</code> encrypted ROMs are supported. The Stargate will not launch <code>.cia</code> files, nor will it launch decrypted <code>.3ds</code> ROMs.</p> </li> <li> <p>Stargate DS mode only works on stock 3DS consoles. On consoles that have CFW installed, a Stargate-launcher <code>.cia</code> needs to be used.</p> </li> <li> <p>While both exFAT and FAT32 are supported, FAT32 is recommended because DS homebrew apps (such as emulators), do not function when the SD card is formatted to exFAT.</p> <ul> <li>This is because the DS mode's DLDI only functions on FAT32. However, commercial NDS and 3DS ROMs work on both exFAT and FAT32.</li> </ul> </li> <li> <p>Some 3DS games straight up do not work on the Stargate, due to anti-piracy measures in some 3DS games. Most notably, Pokemon US/UM has been reported to not work.</p> <ul> <li>If you have CFW installed, you can manually patch some 3DS ROMs to remove AP measures and make them work on Stargate. Keep in mind that this only works with CFW installed, since bypassing signature checks is necessary to run patched <code>.3ds</code> ROMs. See this GBATemp thread for more info.</li> </ul> </li> </ul>"},{"location":"cart-guides/stargate/#setup-guide","title":"Setup Guide:","text":"<ol> <li> <p>Format the SD card you are using to FAT32 by following the formatting tutorial.</p> <ul> <li>You can also use exFAT if you'd like, but remember that DS homebrew won't work, as per the warning above.</li> </ul> </li> <li> <p>Download the Stargate 3DS DS-mode kernel.</p> </li> <li> <p>Open/extract the zip file, and copy the contents into the root of your SD card.</p> </li> <li> <p>If you'd like to be able to use cheats on your NDS games, download a cheat database.</p> </li> <li> <p>You will need the <code>usrcheat.7z</code> file. Extract it using 7-Zip, inside you will find a <code>usrcheat.dat</code> file. Copy this file to <code>sg_system/cheats/</code> on your SD card. (Create the <code>cheats</code> folder if it doesn't exist)</p> </li> <li> <p>Create an <code>NDS Games</code> folder in your SD card root, and place your <code>.nds</code> game ROMs inside. You can also create additional folders to help with organizing/categorizing your ROMs.</p> </li> <li> <p>Place your encrypted <code>.3ds</code> ROMs on the root of your SD card.</p> </li> <li> <p>Insert the SD card back into your cart, then plug the cart into your 3DS. You should see one of your 3DS ROMs pop up as a cartridge game.</p> </li> <li> <p>Use the buttons to cycle through the 3DS game ROMs on your SD. To use DS mode, press in both the left and right buttons on the cart, and then release. Launch the Alex Rider game that pops up.</p> <ul> <li>To exit DS mode, click the home button to go back to the 3DS system menu, and then press in both left and right again to switch the cart into 3DS mode.</li> </ul> </li> </ol> <p>Themes</p> <p>Looking to change the default theme? Check out the themes repository at themes.flashcarts.net!</p> <p>For Stargate, themes go inside <code>sg_system/ui</code> on your SD, since this kernel uses <code>sg_system</code> instead of <code>__rpg</code> as the kernel folder.</p> <p>NTRBoot</p> <p>The Stargate comes with built-in NTRBoot support, no flashing necessary. If you want to use NTRBoot to install CFW on your console with the Stargate, simply follow this guide. Treat the Stargate as a regular pre-flashed NTRBoot cartridge.</p>"},{"location":"cart-guides/v2_0/","title":"R4i SDHC Brand New V2.0","text":""},{"location":"cart-guides/v2_0/#r4i-sdhc-brand-new-v20","title":"R4i SDHC Brand New V2.0","text":""},{"location":"cart-guides/v2_0/#r4isdhccom-r4i-sdhc-9-on-pcb","title":"r4isdhc.com / R4i SDHC 9 on PCB","text":"<p>Info</p> <p>These carts are very old demon-hardware DSTTi clones, and have a special quirk - they load part of the cart's firmware from a file on the SD card - <code>_DS_MENU.DAT</code>. When the <code>_DS_MENU.DAT</code> file is present on the SD, it will behave like a normal demon DSTT clone - checks for an R4.dat to load, and shows <code>MENU?</code> if the file isn't found. If the SD card is empty however, the cart will load to a white screen.</p>"},{"location":"cart-guides/v2_0/#setup-guide","title":"Setup Guide:","text":"<ol> <li> <p>Format the SD card you are using by following the formatting tutorial.</p> </li> <li> <p>Download the r4isdhc.com Brand New V2.0 YSMenu 7.06 package.</p> </li> <li> <p>Next, extract the contents of the downloaded kernel zip to your SD card.</p> </li> <li> <p>Place any <code>.nds</code> game ROMs you'd like to play into the <code>Games</code> folder.</p> </li> <li> <p>The files on your SD card should now look like this:</p> <ul> <li></li> </ul> </li> <li> <p>Insert the SD back into the cart, plug the cart into the DS, and see if it boots into the menu.</p> </li> </ol>"},{"location":"cart-guides/v2_10T/","title":"R4i SDHC Renovation V2.10T & V2.20T","text":""},{"location":"cart-guides/v2_10T/#r4i-sdhc-renovation-v210t-v220t","title":"R4i SDHC Renovation V2.10T &amp; V2.20T","text":""},{"location":"cart-guides/v2_10T/#r4sdhccom-r4i-sdhc-t-on-pcb","title":"r4sdhc.com / R4i SDHC T on PCB","text":"<p>Info</p> <p>These carts are very old demon-hardware DSTTi clones, and have a special quirk - they load part of the cart's firmware from a file on the SD card - <code>_DS_MENU.DAT</code>. When the <code>_DS_MENU.DAT</code> file is present on the SD, it will behave like a normal demon DSTT clone - checks for an R4.dat to load, and shows <code>MENU?</code> if the file isn't found. If the SD card is empty however, the cart will load to a white screen.</p>"},{"location":"cart-guides/v2_10T/#setup-guide","title":"Setup Guide:","text":"<ol> <li> <p>Format the SD card you are using by following the formatting tutorial.</p> </li> <li> <p>Download the V2.10T/V2.20T YSMenu 7.06 package.</p> </li> <li> <p>Next, extract the contents of the downloaded kernel zip to your SD card.</p> </li> <li> <p>Place any <code>.nds</code> game ROMs you'd like to play into the <code>Games</code> folder.</p> </li> <li> <p>The files on your SD card should now look like this:</p> <ul> <li></li> </ul> </li> <li> <p>Insert the SD back into the cart, plug the cart into the DS, and see if it boots into the menu.</p> </li> </ol>"},{"location":"extras/dstt_waio/","title":"WAIO - Wood All in One","text":""},{"location":"extras/dstt_waio/#waio-wood-all-in-one","title":"WAIO - Wood All in One","text":""},{"location":"extras/dstt_waio/#all-dstt-and-demon-hw-carts","title":"All DSTT and Demon HW carts","text":"<p>Info</p> <p>WAIO is a package containing YSMenu with a WoodR4 frontend, allowing you to use YSMenu's game loader with a Wood/AKMenu UI. When a game is launched in the Wood menu, rpglink sets that game as autoboot in YSMenu's ini file, and then launches YSMenu to boot the game.</p> <p>WAIO is compatible with all DSTT based carts, but it only works out of the box with carts that boot from <code>R4.dat</code> or <code>TTMenu.dat</code>. If your cart uses a different boot file, make a copy of the existing <code>TTMenu.dat</code> and rename appropriately. You can reference the YSMenu Compatibility List to check what boot files your DSTT clone needs.</p>"},{"location":"extras/dstt_waio/#setup-guide","title":"Setup Guide:","text":"<ol> <li> <p>Format the SD card you are using by following this guide.</p> </li> <li> <p>Download the DSTT WAIO package.</p> </li> <li> <p>Next, extract the contents of the downloaded kernel zip to your SD card.</p> </li> <li> <p>Place any <code>.nds</code> game ROMs you'd like to play into the <code>Games</code> folder.</p> </li> <li> <p>Insert the SD back into the cart, plug the cart into the DS, and see if it boots into the menu.</p> </li> </ol> <p>Tip</p> <p>Because of the chainloader system being used to load YSMenu, cheats cannot be set via WoodR4. To use cheats on a game, launch the game in WoodR4, then immediately hold the B button on your console. This will cancel the YSMenu autoboot and launch you into the normal YSMenu UI. Here you can set the cheats you'd like to use on your game, (highlight the game and hit Y to open cheats menu) then boot the game in YSMenu.</p>"},{"location":"extras/maio/","title":"MAIO - Moonshell All in One","text":""},{"location":"extras/maio/#maio-moonshell-all-in-one","title":"MAIO - Moonshell All in One","text":""},{"location":"extras/maio/#all-dstt-and-demon-hw-carts","title":"All DSTT and Demon HW carts","text":"<p>Info</p> <p>MAIO is a package containing YSMenu with a Moonshell2 frontend, allowing you to use YSMenu's game loader with a Moonshell 2 UI. When a game is launched in the Moonshell menu, inilink sets that game as autoboot in YSMenu's ini file, and then launches YSMenu to boot the game. Moonshell2, of course, retains its media playback functions as well, so you have a game loader and multimedia center in one when using MAIO.</p> <p>MAIO is compatible with all DSTT based carts, but it only works out of the box with carts that boot from <code>R4.dat</code> or <code>TTMenu.dat</code>. If your cart uses a different boot file, make a copy of the existing <code>TTMenu.dat</code> and rename appropriately. You can reference the YSMenu Compatibility List to check what boot files your DSTT clone needs.</p> <p>More info on MAIO can be found in this Reddit thread.</p> <p>Warning</p> <p>Moonshell2 requires an SD card formatted with 32KB (32768) clusters. Even if you have a larger card like 64GB or 128GB, use 32KB clusters or else Moonshell2 will not launch.</p>"},{"location":"extras/maio/#setup-guide","title":"Setup Guide:","text":"<ol> <li> <p>Format the SD card you are using by following this guide.</p> </li> <li> <p>Download the MAIO package.</p> </li> <li> <p>Next, extract the contents of the downloaded kernel zip to your SD card.</p> </li> <li> <p>Place any <code>.nds</code> game ROMs you'd like to play into the <code>Games</code> folder.</p> </li> <li> <p>Insert the SD back into the cart, plug the cart into the DS, and see if it boots into the menu.</p> </li> </ol> <p>Tip</p> <p>Because of the chainloader system being used to load YSMenu, cheats require a workaround to be used. To use cheats on a game, launch the game in Moonshell2, then immediately hold the B button on your console. This will cancel the YSMenu autoboot and launch you into the normal YSMenu UI. Here you can set the cheats you'd like to use on your game, (highlight the game and hit Y to open cheats menu) then boot the game in YSMenu.</p>"},{"location":"extras/moonshell/","title":"MoonShell 2.10","text":""},{"location":"extras/moonshell/#by-moonlight","title":"By Moonlight","text":"<p>Info</p> <p>MoonShell 2 is a media center for Nintendo DS systems. It supports playing music, watching videos, viewing photos, editing text, and more.</p>"},{"location":"extras/moonshell/#setup-guide","title":"Setup Guide:","text":"<ol> <li> <p>Download MoonShell 2.10 Stable.</p> </li> <li> <p>Next, extract the downloaded <code>Moonshell210Stable.zip</code> file.</p> </li> <li> <p>Navigate into the extracted files, and copy the <code>moonshl2</code> folder to your flashcart's SD card root.</p> </li> <li> <p>Copy <code>moonshl2.nds</code> to any folder you like on your SD card, so long as you can access it in the flashcart menu.</p> </li> <li> <p>Boot into the flashcart menu, and launch <code>moonshl2.nds</code> to use MoonShell.</p> </li> </ol> <p>Converting Videos For MS2</p> <p>MoonShell 2 plays DPG videos - regular modern file formats like mp4 or mkv are not supported. You can convert your videos into DPG format with DPG4x.</p>"},{"location":"extras/ytrmenu/","title":"YTRMenu - TY's YSMenu Fork v2.2","text":""},{"location":"extras/ytrmenu/#all-dstt-and-demon-hw-carts","title":"All DSTT and Demon-HW carts","text":"<p>Kernel Info</p> <p>YTRMenu is a fork of RGF's YSMenu by R-YaTian that adds extended support for Chinese translation patches/romhacks, which fail to load on regular YSMenu. (Usually with <code>errcode=-4</code>)</p> <p>YTRMenu-Specific Quirks/Notes:</p> <ul> <li>YTRMenu uses both extinfo.dat and extinfo.dll for game loading, unlike regular builds of YSMenu or TTMenu which only use extinfo.dat. Do not delete extinfo.dll from the TTMenu folder.</li> <li>Theme colors are configured in the Color.bin file, which is a regular editable text file.</li> <li>Start menu contains a shutdown application, and a skin changer in this repack. If you would like to re-add some emulators like the original YTRMenu release, simply add them back into the YSMenu.ini config.</li> <li>YTRMenu is only shipped in Chinese. If you want to swap to English, you can copy over the <code>YSMenu.ini</code> file found inside <code>English INI</code> into the <code>TTMenu</code> folder on your SD card, and replace the existing file.</li> </ul> <p>Repack Info</p> <p>The YTRMenu repack linked in the setup guide is a stripped down version of R-YaTian's release. The original release packages YTRMenu together with R4iMenu v4.0b and TTMenu, as well as Moonshell and an assortment of emulators.</p> <p>To keep the repack bloat-free, I've focused on shipping YTRMenu alone without extra additions. It contains only the included themes and theme selector, the included shutdown shortcut, and YTRMenu itself.</p> <p>If you would like to access the original download, it has been mirrored for archival here.</p>"},{"location":"extras/ytrmenu/#setup-guide","title":"Setup Guide:","text":"<ol> <li> <p>Format the SD card you are using by following the formatting tutorial.</p> </li> <li> <p>Download the YTRMenu package.</p> </li> <li> <p>Next, extract the downloaded kernel zip to a folder on your PC.</p> </li> <li> <p>If you are using a Demon-HW cart (r4isdhc.com 2014+ or r4i-sdhc.com), navigate into the <code>R4i-SDHC YTRMenu</code> folder and copy everything inside to your SD root.</p> </li> <li> <p>If you are using a DSTT/i or clone cart, navigate into the <code>DSTTi-Clone YTRMenu</code> folder and copy everything inside to your SD root.</p> <ul> <li>Note that many DSTT-based clones will load from a boot file other than <code>TTMenu.dat</code>. Reference the YSMenu Compatibility List and make copies of <code>TTMenu.dat</code> appropriately if your cart requires extra boot files.</li> </ul> </li> <li> <p>Place any <code>.nds</code> game ROMs you'd like to play into the <code>Games</code> folder.</p> </li> <li> <p>Insert the SD back into the cart, plug the cart into the DS, and see if it boots into the menu.</p> </li> </ol>"},{"location":"tutorials/akmenu-next/","title":"Setting Up AKMenu-Next","text":"<p>Info</p> <p>AKMenu-Next is a frontend for nds-bootstrap based on a fork of akmenu4 for running Nintendo DS Software &amp; Homebrew. It supports cheats along with support for Acekard themes. For controls such as soft-reset and quitting games, please see nds-bootstrap controls</p>"},{"location":"tutorials/akmenu-next/#setup-guide","title":"Setup Guide:","text":"FlashcartsNintendo DSiNintendo 3DSUpdating <p>Note</p> <p>This requires a modded Nintendo DSi system. If your Nintendo DSi is not modded, please follow dsi.cfw.guide to install it.</p> <p>Note</p> <p>This requires a modded Nintendo 3DS system. If your Nintendo 3DS is not modded, please follow 3ds.hacks.guide to install it. This guide is also applicable to the Nintendo 2DS models but will be referenced as a 3DS in the steps below.</p> <p>Info</p> <p>AKMenu-Next and nds-bootstrap must be updated seperately of each other. If you wish to check for the latest version of AKMenu-Next and nds-bootstrap, you can view the latest versions &amp; changelog from the Github releases linked here: AKMenu-Next Releases - nds-bootstrap Releases</p>"},{"location":"tutorials/akmenu-next/#installing-akmenu-next-flashcart-edition","title":"Installing AKMenu-Next Flashcart Edition","text":"<ol> <li> <p>Download the latest release of AKMenu-Next Flashcart Edition.</p> </li> <li> <p>Extract the downloaded <code>akmenu-next-flashcart.zip</code> file with 7-Zip.</p> </li> <li> <p>From within the akmenu-next files, copy the following files/folders to your SD card root:</p> <ul> <li><code>_nds</code> folder</li> <li><code>BOOT.NDS</code></li> </ul> </li> <li> <p>Download the latest release of nds-bootstrap.</p> </li> <li> <p>Extract the downloaded <code>nds-bootstrap.zip</code> file with 7-Zip.</p> </li> <li> <p>Copy the contents of the files from the extracted <code>nds-bootstrap.zip</code> file to the <code>_nds</code> folder on your SD card.</p> </li> <li> <p>Load <code>BOOT.NDS</code> with your flashcart's kernel, or alternatively follow the autoboot steps below.</p> </li> </ol>"},{"location":"tutorials/akmenu-next/#cheats","title":"Cheats","text":"<ol> <li> <p>If you'd like to be able to use cheats on your games, download a cheat database.</p> </li> <li> <p>You will need the <code>usrcheat.7z</code> file. Extract it using 7-Zip, inside you will find a <code>usrcheat.dat</code> file. Copy this file to <code>_nds/akmenunext/cheats/</code> on your SD card. (Create the <code>cheats</code> folder if it doesn't exist)</p> </li> </ol>"},{"location":"tutorials/akmenu-next/#autobooting-akmenu-next","title":"Autobooting AKMenu-Next","text":"<p>Note</p> <p>If you don't see your flashcart in the Autoboot folder or the corresponding one in the <code>README.TXT</code> file, skip this section as you will need to use your flashcart kernel to load AKMenu-Next instead. In some cases you can make a copy of <code>BOOT.NDS</code> and rename it to <code>default.nds</code> to make it chainload autoboot on some flashcart kernels.</p> <ol> <li> <p>Open the <code>Autoboot</code> folder within the AKMenu-Next files. Find the folder that corresponds to your flashcart. Check the <code>README.TXT</code> inside the folder if you are unsure.</p> </li> <li> <p>Copy the contents of the folder (do not copy the folder itself) that corresponds with your flashcart to the root of your SD card.</p> </li> <li> <p>If your flashcart is a DSTTi clone that requires additional boot files, check the <code>Supplementary DSTTi Clone Files</code> folder. You can check the YSMenu compatibility list to check which one you need. If the file you need is not there, you can make copies of the <code>TTMenu.dat</code> file from the <code>DSTT &amp; DSTTi</code> folder and rename them accordingly.</p> </li> </ol>"},{"location":"tutorials/akmenu-next/#installing-akmenu-next-nintendo-dsi-edition","title":"Installing AKMenu-Next Nintendo DSi Edition","text":"<ol> <li> <p>Download the latest release of AKMenu-Next DSi Edition.</p> </li> <li> <p>Extract the downloaded <code>akmenu-next-dsi.zip</code> file with 7-Zip.</p> <p>Warning</p> <p>If you are using TWiLight Menu++ and want to dual boot AKMenu-Next, do not copy over <code>BOOT.NDS</code> as this will overwrite the one TWiLight Menu++ uses. You can instead launch <code>akmenu-next.dsi</code> with TWiLight Menu++ or Unlaunch. This however, will mean quitting a game using the nds-bootstrap hotkey menu will boot back into TWiLight Menu++ instead (except if you are using HiyaCFW which will always return to the HiyaCFW Homescreen).</p> </li> <li> <p>From within the AKMenu-Next files, copy the following files/folders to your SD card root:</p> <ul> <li><code>_nds</code> folder</li> <li><code>BOOT.NDS</code> (Please read the warning above)</li> <li><code>akmenu-next.dsi</code></li> </ul> </li> <li> <p>Download the latest release of nds-bootstrap.</p> </li> <li> <p>Extract the downloaded <code>nds-bootstrap.zip</code> file with 7-Zip.</p> </li> <li> <p>Copy the contents of the files from the extracted <code>nds-bootstrap.zip</code> file to the <code>_nds</code> folder on your SD card.</p> </li> <li> <p>Load <code>BOOT.NDS</code> with your desired entrypoint method (e.g. Memory Pit, stylehax or Flipnote Lenny). Alternatively, use Unlaunch or TWiLight Menu++ to boot <code>akmenu-next.dsi</code></p> </li> </ol> <p>Tip</p> <p>If you are using HiyaCFW, you can install <code>akmenu-next.dsi</code> using NTM and have it as a launchable app on your homescreen!</p>"},{"location":"tutorials/akmenu-next/#cheats_1","title":"Cheats","text":"<ol> <li> <p>If you'd like to be able to use cheats on your games, download a cheat database.</p> </li> <li> <p>You will need the <code>usrcheat.7z</code> file. Extract it using 7-Zip, inside you will find a <code>usrcheat.dat</code> file. Copy this file to <code>_nds/akmenunext/cheats/</code> on your SD card. (Create the <code>cheats</code> folder if it doesn't exist)</p> </li> </ol>"},{"location":"tutorials/akmenu-next/#autobooting-akmenu-next_1","title":"Autobooting AKMenu-Next","text":"<ol> <li> <p>Turn on your DSi while holding A and B</p> </li> <li> <p>In the Unlaunch menu, go to OPTIONS</p> </li> <li> <p>Set NO BUTTON or a button of your choice to the akmenu-next entry that says <code>BOOT.NDS</code> (or <code>akmenu-next.dsi</code> if applicable) on the bottom screen</p> </li> </ol>"},{"location":"tutorials/akmenu-next/#installing-akmenu-next-nintendo-3ds-edition","title":"Installing AKMenu-Next Nintendo 3DS Edition","text":"<ol> <li> <p>Download the latest release of AKMenu-Next 3DS Edition.</p> </li> <li> <p>Extract the downloaded <code>akmenu-next-3ds.zip</code> file with 7-Zip.</p> <p>Warning</p> <p>If you are using TWiLight Menu++ on your Nintendo 3DS and want to also use AKMenu-Next, do not copy over <code>BOOT.NDS</code> as this will overwrite the one TWiLight Menu++ uses. This however, will mean quitting a game using the nds-bootstrap hotkey menu will boot back into TWiLight Menu++ instead.</p> </li> <li> <p>From within the AKMenu-Next files, copy the following files/folders to your SD card root:</p> <ul> <li><code>_nds</code> folder</li> <li><code>BOOT.NDS</code> (Please read the warning above)</li> <li><code>akmenu-next.cia</code></li> </ul> </li> <li> <p>Download the latest release of nds-bootstrap.</p> </li> <li> <p>Extract the downloaded <code>nds-bootstrap.zip</code> file with 7-Zip.</p> </li> <li> <p>Copy the contents of the files from the extracted <code>nds-bootstrap.zip</code> file to the <code>_nds</code> folder on your SD card.</p> </li> <li> <p>Boot up your Nintendo 3DS. Open the FBI app, go to your SD card, and find the <code>akmenu-next.cia</code> file. Select the cia, then choose \"Install CIA\".</p> </li> <li> <p>Launch the <code>akmenu-next</code> application from the 3DS home screen.</p> </li> </ol> <p>Tip</p> <p>If you are upgrading from an older version of AKMenu-Next, or if AKMenu-Next does not appear on your 3DS home screen after installing the cia, restart your 3DS.</p>"},{"location":"tutorials/akmenu-next/#cheats_2","title":"Cheats","text":"<ol> <li> <p>If you'd like to be able to use cheats on your games, download a cheat database.</p> </li> <li> <p>You will need the <code>usrcheat.7z</code> file. Extract it using 7-Zip, inside you will find a <code>usrcheat.dat</code> file. Copy this file to <code>_nds/akmenunext/cheats/</code> on your SD card. (Create the <code>cheats</code> folder if it doesn't exist)</p> </li> </ol>"},{"location":"tutorials/akmenu-next/#updating-akmenu-next","title":"Updating AKMenu-Next","text":"<ol> <li> <p>Go to the tab above for your applicable console/flashcart and  Download the latest release of AKMenu-Next from there.</p> </li> <li> <p>Extract the downloaded <code>akmenu-next-flashcart/dsi/3ds.zip</code> file with 7-Zip.</p> </li> <li> <p>From within the extracted AKMenu-Next files, copy the <code>_nds</code> folder to your SD card root, clicking <code>Replace files</code> if on Windows or Linux, or <code>Merge</code> if on MacOS. Then follow the steps below.</p> </li> </ol> <p>Please follow the below according to the system you are using:</p>"},{"location":"tutorials/akmenu-next/#if-you-are-on-a-flashcart","title":"If you are on a flashcart","text":"<ul> <li>Copy &amp; replace the <code>BOOT.NDS</code> file to your SD card root.</li> </ul>"},{"location":"tutorials/akmenu-next/#if-you-are-on-a-nintendo-dsi","title":"If you are on a Nintendo DSi","text":"<ul> <li>Copy &amp; replace the <code>akmenu-next.dsi</code> file to your SD card root.</li> <li>If you do not also use Twilightmenu++, copy &amp; replace the <code>BOOT.NDS</code> file to your SD card root. If you use Twilightmenu++, skip this file.</li> <li>If you have AKMenu-Next installed as an app on HiyaCFW, you will need to install the updated <code>akmenu-next.dsi</code> file with NTM.</li> </ul>"},{"location":"tutorials/akmenu-next/#if-you-are-on-a-nintendo-3ds","title":"If you are on a Nintendo 3DS","text":"<ul> <li>Copy &amp; replace the <code>akmenu-next.cia</code> file to your SD card root.</li> <li>If you do not also use Twilightmenu++, copy &amp; replace the <code>BOOT.NDS</code> file to your SD card root. If you use Twilightmenu++, skip this file.</li> <li>Install the <code>akmenu-next.cia</code> file with FBI, you may need to restart your 3DS console afterwards to use the new version.</li> </ul>"},{"location":"tutorials/akmenu-next/#updating-nds-bootstrap","title":"Updating nds-bootstrap","text":"<ol> <li> <p>Download the latest release of nds-bootstrap.</p> </li> <li> <p>Extract the downloaded <code>nds-bootstrap.zip</code> file with 7-Zip.</p> </li> <li> <p>Copy the contents of the files from the extracted <code>nds-bootstrap.zip</code> file to the <code>_nds</code> folder on your SD card.</p> </li> </ol>"},{"location":"tutorials/dsiware/","title":"Running DSiWare On Flashcarts","text":""},{"location":"tutorials/dsiware/#running-dsiware-on-flashcarts","title":"Running DSiWare on Flashcarts","text":"<p>DSiWare Compatibility</p> <p>Runnning DSiWare on NDS hardware is not a stable experience. As DSiWare is meant to run in DSi mode with larger RAM and higher clock speeds than NDS, you will sometimes run into slowdown or outright game crashes. A Memory Expansion Pak may also be required to run some DSiWare in NDS mode. For example, Zelda: Four Swords will not launch on a DS unless the pak is inserted.</p> <p>A list of DS-mode compatible DSiWare can be found in the TWiLight Menu++ GitHub Repository.</p>"},{"location":"tutorials/dsiware/#setup-guide","title":"Setup Guide:","text":"<ol> <li> <p>TWiLight Menu++ and NDS-Bootstrap is required to run DSiWare. As such, first setup TWiLight as either primary or secondary kernel on your flashcart.</p> </li> <li> <p>After setting up TWiLight Menu++, you will need to place your DSiWare (with <code>.nds</code> extension) in <code>/roms/dsiware</code> on your SD card.</p> <p>Note</p> <p>If your DSiWare dump is a file with no file extension, you can change the filename and add <code>.nds</code> to the end to get TWiLight Menu++ to pick it up in the menu.</p> <p>For example, if you have a DSiWare dump of Zelda: Four Swords with the filename <code>00000000</code>, you can rename the file to <code>Zelda Four Swords.nds</code>, before placing it inside <code>/roms/dsiware</code></p> </li> <li> <p>You will now need to find a DS game built with SDK 5.x to use as a donor ROM for DSiWare. Place the donor ROM in <code>/roms/nds</code>.</p> <p>Tip</p> <p></p> <p>DSi-Enhanced games, such as Pokemon - Black Version are usually built with SDK5.x, which makes them a good candidate for usage as a donor ROM. You can check the SDK version of any game by highlighting it in TWiLight and pressing <code>Y</code>.</p> </li> <li> <p>Highlight the donor game in TWiLight, and press <code>Y</code> to open the ROM info menu. Scroll down to the bottom, and select <code>Set as Donor ROM</code>.</p> </li> <li> <p>You are now ready to play DSiWare! Head to <code>/roms/dsiware</code> in TWiLight and choose a game to launch.</p> </li> <li> <p>[Optional] - To improve compatibility, insert a Slot-2 Memory Expansion Pak if you are using a DS Lite or NDS.</p> </li> </ol>"},{"location":"tutorials/emulators/","title":"Setting up Emulators","text":""},{"location":"tutorials/emulators/#nintendo-consoles","title":"Nintendo Consoles","text":"GBAGB/CSNESNES <p>Info</p> <p>GBARunner 2 and 3 are both hypervisors for running GBA games on DS hardware. Setup guides for both are provided, as currently, some games run better on one than the other. GBARunner2 is the older and more stable release, while GBARunner3 is the in-development successor to GBARunner2.</p> GBARunner2GBARunner3 <ol> <li> <p>Download DSL Enhanced GBARunner2.</p> </li> <li> <p>Create an <code>Emulators</code> folder on your SD card root, and place <code>GBARunner2_arm9dldi_ds.nds</code> inside.</p> </li> <li> <p>Create a <code>_gba</code> folder on your SD card root.</p> </li> <li> <p>Obtain a GBA BIOS dump. Rename the file to <code>bios.bin</code> if it isn't named that already.</p> </li> <li> <p>Place the <code>bios.bin</code> file in the <code>_gba</code> folder.</p> <p>Note</p> <p>If you are unable to obtain a GBA BIOS .bin file, you may skip the two steps above. Keep in mind however, that GBARunner2 will fallback to the built in open-source BIOS, which will lead to worse game compatibility.</p> </li> <li> <p>On your SD card root, create a <code>ROMs</code> folder, and then create a <code>GBA</code> folder inside it. Place your <code>.gba</code> game ROMs inside.</p> </li> <li> <p>Place the SD card back into your cart, and boot into the menu.</p> </li> <li> <p>To play GBA games, navigate to the <code>Emulators</code> folder, launch the GBARunner2 NDS file, and select a GBA ROM in the GBARunner2 menu.</p> </li> </ol> <p>Tip</p> <p>If the ARM9 DLDI version of GBARunner2 doesn't work on your cart, you can try using the ARM7 DLDI version instead.</p> <ol> <li> <p>Download the GBARunner3 zip file.</p> </li> <li> <p>Open/extract <code>GBARunner3-hicode.zip</code>, and copy the contents into the root of your SD card.</p> </li> <li> <p>Download the GBARunner3 frontend.</p> </li> <li> <p>Create an <code>Emulators</code> folder on your SD card root, and place <code>gbar3-frontend.nds</code> inside.</p> </li> <li> <p>Obtain a GBA BIOS dump. Rename the file to <code>bios.bin</code> if it isn't named that already.</p> </li> <li> <p>Place the <code>bios.bin</code> file in the <code>_gba</code> folder.</p> </li> <li> <p>On your SD card root, create a <code>ROMs</code> folder, and then create a <code>GBA</code> folder inside it. Place your <code>.gba</code> game ROMs inside.</p> </li> <li> <p>Place the SD card back into your cart, and boot into the menu.</p> </li> <li> <p>To play GBA games, navigate to the <code>Emulators</code> folder, launch <code>gbar3-frontend.nds</code>, and select a GBA ROM in the menu.</p> </li> </ol> <ol> <li> <p>Download the GameYob zip file.</p> </li> <li> <p>Create an <code>Emulators</code> folder on your SD card root.</p> </li> <li> <p>Open/extract <code>gameyob.zip</code>, and locate <code>gameyob.nds</code> inside. Copy this file to the <code>Emulators</code> folder on your SD card.</p> </li> <li> <p>On your SD card root, create a <code>ROMs</code> folder, and then create a <code>GB</code> folder inside it. Place your <code>.gb</code> or <code>.gbc</code> game ROMs inside.</p> </li> <li> <p>Obtain a GameBoy Color BIOS dump. Rename the file to <code>gbc_bios.bin</code> if it isn't named that already.</p> </li> <li> <p>Place the <code>gbc_bios.bin</code> file in <code>/ROMs/GB</code>.</p> <p>Note</p> <p>If you are unable to obtain a GBC BIOS .bin file, you may skip the two steps above. However, GameYob will not be able to run games in color without the BIOS file, so you will only be able to emulate games in grayscale.</p> </li> <li> <p>Place the SD card back into your cart, and boot into the menu.</p> </li> <li> <p>To play GB/C games, navigate to the <code>Emulators</code> folder, launch <code>gameyob.nds</code>, and select a GB/C ROM in the GameYob menu.</p> </li> </ol> <p>Warning</p> <p>SNEmulDS has fairly low game compatibility, so expect results to be hit or miss. Some games may run flawlessly, some may be buggy, and some may be completely unplayable. You can get an idea of what will work and what settings to use by checking the compatibility list.</p> <ol> <li> <p>Download the SNEmulDS zip file.</p> </li> <li> <p>Create an <code>Emulators</code> folder on your SD card root.</p> </li> <li> <p>Open/extract <code>snemulds_0.6a.zip</code>, and locate <code>SNEmulDS.nds</code> inside. Copy this file to the <code>Emulators</code> folder on your SD card.</p> </li> <li> <p>Copy <code>snemul.cfg</code> to your SD card root, then open the file with Notepad. Change the <code>ROMPath = /SNES</code> line to <code>ROMPath = /ROMs/SNES</code>, and save the file.</p> </li> <li> <p>On your SD card root, create a <code>ROMs</code> folder, and then create a <code>SNES</code> folder inside it. Place your <code>.sfc</code> game ROMs inside.</p> </li> <li> <p>Place the SD card back into your cart, and boot into the menu.</p> </li> <li> <p>To play SNES games, navigate to the <code>Emulators</code> folder, launch <code>SNEmulDS.nds</code>, and select a SNES ROM in the menu.</p> </li> </ol> <ol> <li> <p>Download the NesDS NDS file.</p> </li> <li> <p>Create an <code>Emulators</code> folder on your SD card root.</p> </li> <li> <p>Copy the <code>nesDS.nds</code> file to the <code>Emulators</code> folder on your SD card.</p> </li> <li> <p>On your SD card root, create a <code>ROMs</code> folder, and then create a <code>NES</code> folder inside it. Place your <code>.nes</code> game ROMs inside.</p> </li> <li> <p>Place the SD card back into your cart, and boot into the menu.</p> </li> <li> <p>To play NES games, navigate to the <code>Emulators</code> folder, launch <code>nesDS.nds</code>, and select a NES ROM in the menu.</p> </li> </ol>"},{"location":"tutorials/emulators/#atari-consoles","title":"Atari Consoles","text":"Atari 2600Atari 5200Atari 7800Atari 800/400 <ol> <li> <p>Download the StellaDS NDS file.</p> </li> <li> <p>Create an <code>Emulators</code> folder on your SD card root.</p> </li> <li> <p>Copy <code>StellaDS.nds</code> to the <code>Emulators</code> folder on your SD card.</p> </li> <li> <p>On your SD card root, create a <code>ROMs</code> folder, and then create a <code>2600</code> folder inside it. Place your Atari 2600 game ROMs inside.</p> </li> <li> <p>Place the SD card back into your cart, and boot into the menu.</p> </li> <li> <p>To play Atari 2600 games, navigate to the <code>Emulators</code> folder, launch <code>StellaDS.nds</code>, and select a ROM in the menu.</p> </li> </ol> <ol> <li> <p>Download the A5200DS NDS file.</p> </li> <li> <p>Create an <code>Emulators</code> folder on your SD card root.</p> </li> <li> <p>Copy <code>A5200DS.nds</code> to the <code>Emulators</code> folder on your SD card.</p> </li> <li> <p>On your SD card root, create a <code>ROMs</code> folder, and then create two folders inside: <code>5200</code> and <code>BIOS</code>.</p> </li> <li> <p>Place your <code>.a52</code> game ROMs inside the <code>5200</code> folder.</p> </li> <li> <p>Obtain an Atari 5200 BIOS dump. Rename the file to <code>5200.rom</code> if it isn't named that already.</p> </li> <li> <p>Place the <code>5200.rom</code> file in <code>/ROMs/BIOS</code>.</p> <p>Note</p> <p>If you are unable to obtain an Atari 5200 BIOS file, you may skip the two steps above. A built-in open-source BIOS is provided by the emulator, but some games don't have full compatibility with the built-in BIOS.</p> </li> <li> <p>Place the SD card back into your cart, and boot into the menu.</p> </li> <li> <p>To play Atari 5200 games, navigate to the <code>Emulators</code> folder, launch <code>A5200DS.nds</code>, and select a ROM in the menu.</p> </li> </ol> <ol> <li> <p>Download the A7800DS NDS file.</p> </li> <li> <p>Create an <code>Emulators</code> folder on your SD card root.</p> </li> <li> <p>Copy <code>A7800DS.nds</code> to the <code>Emulators</code> folder on your SD card.</p> </li> <li> <p>On your SD card root, create a <code>ROMs</code> folder, and then create two folders inside: <code>7800</code> and <code>BIOS</code>.</p> </li> <li> <p>Place your <code>.a78</code> or <code>.bin</code> game ROMs inside the <code>7800</code> folder.</p> <p>Note</p> <p>NTSC ROMs are strongly recommended by the developer. PAL ROMs have more scanlines and render more slowly, causing the sound to be wrong. All testing was also done with only NTSC ROMs.</p> </li> <li> <p>Obtain an Atari 7800 High Score ROM dump. Rename the file to <code>highscore.rom</code> if it isn't named that already.</p> </li> <li> <p>Place the <code>highscore.rom</code> file in <code>/ROMs/BIOS</code>.</p> <p>Note</p> <p>If you are unable to obtain an Atari 7800 highscore.rom file, you may skip the two steps above. The emulator will work without it, but your high scores won't be saved.</p> </li> <li> <p>Place the SD card back into your cart, and boot into the menu.</p> </li> <li> <p>To play Atari 7800 games, navigate to the <code>Emulators</code> folder, launch <code>A7800DS.nds</code>, and select a ROM in the menu.</p> </li> </ol> <ol> <li> <p>Download the A8DS NDS file.</p> </li> <li> <p>Create an <code>Emulators</code> folder on your SD card root.</p> </li> <li> <p>Copy <code>A8DS.nds</code> to the <code>Emulators</code> folder on your SD card.</p> </li> <li> <p>On your SD card root, create a <code>ROMs</code> folder, and then create two folders inside: <code>800</code> and <code>BIOS</code>.</p> </li> <li> <p>Place your 8-bit Atari game game ROMs inside the <code>800</code> folder.</p> <ul> <li>The following game types are supported by A8DS:<ul> <li><code>CAR</code> and <code>ROM</code> cartridge-based games up to 1MB in size</li> <li><code>XEX</code> Atari 8-bit executable images</li> <li><code>ATR</code> and <code>ATX</code> disk-based games</li> <li>Atari 5200 cartridge based games (up to 128K Super Carts)</li> </ul> </li> </ul> </li> <li> <p>A8DS optionally supports Atari BIOSes for more accurate emulation. An open source \"Altirra\" BIOS is built-in, but official Atari BIOSes will provide the best performance, if you are able to obtain them.</p> <ul> <li>The following optional BIOSes are supported by A8DS:<ul> <li><code>atarixl.rom</code> - Atari 16k XL/XE BIOS (NTSC Rev 02 - BB 01.02, 10.May.1983)</li> <li><code>atariosb.rom</code> - 12k Atari 800 OS-B revision BIOS (NTSC OS-B version 2) - for older games</li> <li><code>ataribas.rom</code> - 8k Atari BASIC cartridge (Rev C)</li> <li><code>a5200.rom</code> - 2k Atari 5200 BIOS ROM (Rev 1)</li> </ul> </li> </ul> </li> <li> <p>Place all BIOS files you have obtained and want to use in <code>/ROMs/BIOS</code>.</p> </li> <li> <p>Place the SD card back into your cart, and boot into the menu.</p> </li> <li> <p>To play Atari 8-bit games, navigate to the <code>Emulators</code> folder, launch <code>A8DS.nds</code>, and select a ROM in the menu.</p> </li> </ol>"},{"location":"tutorials/emulators/#miscellaneous-consoles","title":"Miscellaneous Consoles","text":"Sega Genesis/MegaDriveColecoVisionNeoGeoPC-Engine/TurboGrafx-16 <ol> <li> <p>Download the jEnesisDS zip file.</p> </li> <li> <p>Create an <code>Emulators</code> folder on your SD card root.</p> </li> <li> <p>Open/extract <code>jenesisds_0.7.4.zip</code>, and locate <code>jEnesisDS.nds</code> inside. Copy this file to the <code>Emulators</code> folder on your SD card.</p> </li> <li> <p>On your SD card root, create a <code>ROMs</code> folder, and then create a <code>Genesis</code> folder inside it. Place your Genesis game ROMs inside.</p> <p>Supported File Types</p> <p>jEnesisDS requires ROMs to be in <code>.gen</code>, <code>.bin</code>, or <code>.smd</code> format to be recognized in the file browser. If you have <code>.md</code> ROMs, rename them to <code>.gen</code> or <code>.bin</code> before placing them on your SD card.</p> </li> <li> <p>Place the SD card back into your cart, and boot into the menu.</p> </li> <li> <p>To play Sega Genesis games, navigate to the <code>Emulators</code> folder, launch <code>jEnesisDS.nds</code>, and select a ROM in the menu.</p> </li> </ol> <ol> <li> <p>Download the ColecoDS NDS file.</p> </li> <li> <p>Create an <code>Emulators</code> folder on your SD card root.</p> </li> <li> <p>Copy <code>ColecoDS.nds</code> to the <code>Emulators</code> folder on your SD card.</p> </li> <li> <p>On your SD card root, create a <code>ROMs</code> folder, and then create two folders inside: <code>Coleco</code> and <code>BIOS</code>.</p> </li> <li> <p>Place your ColecoVision game ROMs inside the <code>Coleco</code> folder.</p> </li> <li> <p>Obtain a ColecoVision BIOS dump. Rename the file to <code>coleco.rom</code> if it isn't named that already.</p> </li> <li> <p>Place the <code>coleco.rom</code> file in <code>/ROMs/BIOS</code>.</p> </li> <li> <p>Place the SD card back into your cart, and boot into the menu.</p> </li> <li> <p>To play ColecoVision games, navigate to the <code>Emulators</code> folder, launch <code>ColecoDS.nds</code>, and select a ROM in the menu.</p> </li> </ol> <p>Tip</p> <p>More consoles than just ColecoVision are supported by ColecoDS - similar architecture devices are also emulated. See the ColecoDS README for more information, and a full list of supported BIOSes.</p> <ol> <li> <p>Download the NeoDS NDS file.</p> </li> <li> <p>Create an <code>Emulators</code> folder on your SD card root.</p> </li> <li> <p>Copy <code>NeoDS.nds</code> to the <code>Emulators</code> folder on your SD card.</p> </li> <li> <p>On your SD card root, create a <code>ROMs</code> folder, and then create a <code>NeoGeo</code> folder inside.</p> </li> <li> <p>Also on the SD card root, create a <code>data</code> folder, and then create a <code>NeoDS</code> folder inside.</p> </li> <li> <p>Download this <code>_NeoDS.ini</code> file, and place it inside <code>/data/NeoDS</code>.</p> </li> <li> <p>NeoDS requires ROMs to be converted to <code>.neo</code> format before they can be used with the emulator. Follow the documentation found here to convert your ROMs.</p> </li> <li> <p>Once your ROMs are converted, place them in <code>/ROMs/NeoGeo</code> on your SD card. </p> </li> <li> <p>Place the SD card back into your cart, and boot into the menu.</p> </li> <li> <p>To play NeoGeo games, navigate to the <code>Emulators</code> folder, launch <code>NeoDS.nds</code>, and select a ROM in the menu.</p> </li> </ol> <ol> <li> <p>Download the NitroGrafx NDS file.</p> </li> <li> <p>Create an <code>Emulators</code> folder on your SD card root.</p> </li> <li> <p>Copy <code>NitroGrafx.nds</code> to the <code>Emulators</code> folder on your SD card.</p> </li> <li> <p>On your SD card root, create a <code>ROMs</code> folder, and then create a <code>TurboGrafx</code> folder inside it.</p> </li> <li> <p>Place your TurboGrafx/PC-Engine game ROMs inside the <code>TurboGrafx</code> folder.</p> </li> <li> <p>On your SD card root, create a <code>NitroGrafx</code> folder. </p> <ul> <li>This folder is only used by the emulator for save files and configuration, so you don't need to place anything inside.</li> </ul> </li> <li> <p>Place the SD card back into your cart, and boot into the menu.</p> </li> <li> <p>To play TurboGrafx games, navigate to the <code>Emulators</code> folder, launch <code>NitroGrafx.nds</code>, and select a ROM in the menu.</p> </li> </ol>"},{"location":"tutorials/formatting/","title":"Formatting a microSD Card","text":"<p>Info</p> <p>Choose the tab corresponding to the operating system you are using to format your SD card. Windows or Linux systems are recommended, but MacOS should work as well if it's your only choice.</p> <p>ChromeOS/Android/iOS are NOT reliable devices to format your SD card with!</p>"},{"location":"tutorials/formatting/#operating-system","title":"Operating System:","text":"WindowsLinuxMacOS <p>Warning</p> <p>Make sure to use the correct tab for your SD card size. This is important, or you may end up formatting to the wrong filesystem by choosing the wrong tab!</p> <p>Formatting an SD card will WIPE ALL FILES on it. If you have any data on the SD card that you would like to keep, back it up your PC before formatting.</p> 32GB or Smaller64GB or Larger <ol> <li> <p>Download the latest version of SD Memory Card Formatter.</p> <ul> <li>Accept the End User License Agreement to start the download</li> </ul> </li> <li> <p>Insert your SD card into your computer.</p> </li> <li> <p>Run <code>SD Card Formatter Setup</code> (the <code>.exe</code> file) in the downloaded <code>.zip</code> file with Administrator privileges, then install the program.</p> </li> <li> <p>Run <code>SD Card Formatter</code> from the Start Menu.</p> </li> <li> <p>Select your SD card\u2019s drive letter for <code>Select Card</code>.</p> <ul> <li>Make sure you choose the correct drive letter, otherwise you might accidentally erase the wrong drive!</li> </ul> </li> <li> <p>Ensure that <code>Quick Format</code> is selected.</p> </li> <li> <p>Click <code>Format</code>.</p> </li> <li> <p>Click <code>OK</code>.</p> </li> <li> <p>Wait for the format to finish.</p> </li> <li> <p>Click <code>OK</code>.</p> </li> <li> <p>Close the SD Card Formatter program.</p> </li> </ol> <ol> <li> <p>Download the latest version of SD Memory Card Formatter.</p> <ul> <li>Accept the End User License Agreement to start the download</li> </ul> </li> <li> <p>Insert your SD card into your computer.</p> </li> <li> <p>Run <code>SD Card Formatter Setup</code> (the <code>.exe</code> file) in the downloaded <code>.zip</code> file with Administrator privileges, then install the program.</p> </li> <li> <p>Run <code>SD Card Formatter</code> from the Start Menu.</p> </li> <li> <p>Select your SD card\u2019s drive letter for <code>Select card</code>.</p> <ul> <li>Make sure you choose the correct drive letter, otherwise you might accidentally erase the wrong drive!</li> </ul> </li> <li> <p>Ensure that <code>Quick Format</code> is selected.</p> </li> <li> <p>Click <code>Format</code>.</p> </li> <li> <p>Click <code>OK</code>.</p> </li> <li> <p>Wait for the format to finish.</p> </li> <li> <p>Click <code>OK</code>.</p> </li> <li> <p>Close the SD Card Formatter program.</p> <p>Note</p> <p>You're not done yet! Your SD card will be formatted to exFAT at this point. The following steps will format it to FAT32.</p> </li> <li> <p>Download GUIFormat.</p> </li> <li> <p>Run <code>guiformat.exe</code>.</p> </li> <li> <p>Select your SD card\u2019s drive letter for <code>Drive</code>.</p> <ul> <li>Make sure you choose the correct drive letter, otherwise you might accidentally erase the wrong drive!</li> </ul> </li> <li> <p>Set <code>Allocation unit size</code> to <code>32768</code>.</p> </li> <li> <p>Ensure that <code>Quick Format</code> is selected.</p> </li> <li> <p>Click <code>Start</code>.</p> </li> <li> <p>Click <code>OK</code>.</p> <p>Errors in GUIFormat</p> <p>You may encounter an error while using GUIFormat. See below for possible codes and solutions:</p> <p>Failed to open device: GetLastError()=32</p> <ul> <li>Close everything that may be using the SD card, such as any File Explorer windows.</li> </ul> <p>GetLastError()=1117</p> <ul> <li>Your SD card write-protection switch may be enabled. The lock switch must be flipped upwards to allow writing to the SD card. (including formatting)</li> </ul> </li> <li> <p>Wait for the format to finish.</p> </li> <li> <p>Click <code>Close</code>.</p> </li> </ol> <p>Warning</p> <p>The commands in this guide are case-sensitive. Enter them exactly as written, or there may be unintended consequences.</p> <p>Formatting an SD card will WIPE ALL FILES on it. If you have any data on the SD card that you would like to keep, back it up your PC before formatting.</p> sdFormatLinuxfdiskpartedKDE Partition Manager <ol> <li> <p>Make sure your SD card is not inserted.</p> </li> <li> <p>Open a terminal window and run the command <code>watch lsblk</code></p> </li> <li> <p>Insert the SD card and watch for a new device appearing in lsblk.</p> </li> <li> <p>Observe the output for the new device. It should match something like this:</p> <pre><code>NAME        MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT\nmmcblk0     179:0    0 29.7G  0 disk \n\u2514\u2500mmcblk0p1 179:1    0 29.5G  0 part /run/media/user/FFFF-FFFF\n</code></pre> </li> <li> <p>Take note of the name of the device that now appears. In the example above, it was <code>mmcblk0</code>, but it could show up as <code>sda</code> or <code>sdb</code>, if you use a USB adapter.</p> <ul> <li>If <code>RO</code> is set to <code>1</code>, make sure the lock switch is not slid down.</li> <li>Device name is not the partition name. In the example above, the device name is <code>mmcblk0</code>, and the partition name is <code>mmcblk0p1</code>.</li> </ul> </li> <li> <p>Hit <code>CTRL</code> + <code>C</code> to exit the menu.</p> </li> <li> <p>Run <code>sudo umount /dev/&lt;device name&gt;*</code> (do not replace the <code>*</code>)</p> </li> <li> <p>sdFormatLinux is not available in repositories, so it has to be installed using one of the following methods:</p> Precompiled BinaryCompile from Source <ol> <li> <p>Download the latest release from https://github.com/profi200/sdFormatLinux/releases</p> </li> <li> <p>Install the 7zip utility if you don't have it already.</p> </li> <li> <p>Extract the downloaded archive:     <pre><code>7z x sdFormatLinux_vX.X.X.7z\n</code></pre>     Replace X.X.X with the version number you downloaded.</p> </li> <li> <p>Navigate into the extracted directory with <code>cd</code>.</p> </li> </ol> <ol> <li>Clone the repository and compile:     <pre><code>git clone https://github.com/profi200/sdFormatLinux.git\ncd sdFormatLinux\nmake\n</code></pre></li> </ol> </li> <li> <p>For SD cards 64GB or larger (SDXC), run the following command to format to FAT32:      <pre><code>sudo ./sdFormatLinux -f -e trim /dev/&lt;device name&gt;\n</code></pre></p> <ul> <li>The <code>-f</code> option forces FAT32 format for SDXC cards</li> <li>The <code>-e trim</code> option will erase the card before formatting (improves performance)</li> <li>You can optionally add the <code>-v</code> option to get verbose status updates during formatting</li> </ul> </li> <li> <p>For SD cards 32GB or smaller, the <code>-f</code> flag is not needed:    <pre><code>sudo ./sdFormatLinux -e trim /dev/&lt;device name&gt;\n</code></pre></p> </li> <li> <p>If you want to add a volume label to your SD card, use the <code>-l</code> option:      <pre><code>sudo ./sdFormatLinux -l 'MY LABEL' -e trim -f /dev/&lt;device name&gt;\n</code></pre></p> <ul> <li>Labels are limited to 11 uppercase characters</li> </ul> </li> <li> <p>Wait for the format to complete. If you added the <code>-v</code> (verbose) option, you'll see details about the formatting process.</p> </li> <li> <p>Run <code>sudo eject /dev/&lt;device name&gt;</code>, then remove the SD card. You're done!</p> </li> </ol> <p>Why use sdFormatLinux?</p> <p>sdFormatLinux formats SD cards according to SD Association specifications, optimizing them for flash-based media. This provides better performance and longevity compared to generic formatting tools. When using the <code>-f</code> option for SDXC cards, it creates a FAT32 filesystem with 64 KiB clusters, which is optimal for performance while maintaining compatibility with devices that don't support exFAT.</p> <ol> <li> <p>Make sure your SD card is not inserted.</p> </li> <li> <p>Open a terminal window and run the command <code>watch lsblk</code></p> </li> <li> <p>Insert the SD card and watch for a new device appearing in lsblk.</p> </li> <li> <p>Observe the output for the new device. It should match something like this:</p> <pre><code>NAME        MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT\nmmcblk0     179:0    0 29.7G  0 disk \n\u2514\u2500mmcblk0p1 179:1    0 29.5G  0 part /run/media/user/FFFF-FFFF\n</code></pre> </li> <li> <p>Take note of the name of the device that now appears. In the example above, it was <code>mmcblk0</code>, but it could show up as <code>sda</code> or <code>sdb</code>, if you use a USB adapter.</p> <ul> <li>If <code>RO</code> is set to <code>1</code>, make sure the lock switch is not slid down.</li> <li>Device name is not the partition name. In the example above, the device name is <code>mmcblk0</code>, and the partition name is <code>mmcblk0p1</code>.</li> </ul> </li> <li> <p>Hit <code>CTRL</code> + <code>C</code> to exit the menu.</p> </li> <li> <p>Run <code>sudo umount /dev/&lt;device name&gt;*</code> (do not replace the <code>*</code>)</p> </li> <li> <p>Install the <code>fdisk</code> and <code>dosfstools</code> packages using your package manager of choice, if they are not installed already.</p> </li> <li> <p>Run <code>sudo fdisk /dev/&lt;device name&gt;</code></p> </li> <li> <p>Enter <code>o</code>. This will create a new MBR partition scheme.</p> </li> <li> <p>Enter <code>n</code>, then press enter until you're returned to the prompt.</p> <ul> <li>The default values will work fine for all consoles.</li> </ul> </li> <li> <p>Enter <code>t</code>, then enter <code>0c</code></p> </li> <li> <p>Enter <code>a</code>, and then <code>p</code>. Observe the output, and make sure the device is now formatted correctly:</p> <pre><code>Disk /dev/mmcblk0: 29.72 GiB, 31914983424 bytes, 62333952 sectors\nUnits: sectors of 1 * 512 = 512 bytes\nSector size (logical/physical): 512 bytes / 512 bytes\nI/O size (minimum/optimal): 512 bytes / 512 bytes\nDisklabel type: dos\nDisk identifier: 0x########\n\nDevice                Boot  Start      End  Sectors  Size Id Type\n/dev/&lt;partition name&gt;        8192 62333951 62325760 29.7G  c W95 FAT32 (LBA)\n</code></pre> </li> <li> <p>If there are no issues, enter <code>w</code>. This will save changes and exit the fdisk program.</p> </li> <li> <p>Run <code>sudo mkfs.vfat /dev/&lt;partition name&gt; -s 64</code> to format the new partition to FAT32.</p> </li> <li> <p>Run <code>sudo eject /dev/&lt;device name&gt;</code>, then remove the SD. You're done!</p> </li> </ol> <ol> <li> <p>Make sure your SD card is not inserted.</p> </li> <li> <p>Open a terminal window and run the command <code>watch lsblk</code></p> </li> <li> <p>Insert the SD card and watch for a new device appearing in lsblk.</p> </li> <li> <p>Observe the output for the new device. It should match something like this:</p> <pre><code>NAME        MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT\nmmcblk0     179:0    0 29.7G  0 disk \n\u2514\u2500mmcblk0p1 179:1    0 29.5G  0 part /run/media/user/FFFF-FFFF\n</code></pre> </li> <li> <p>Take note of the name of the device that now appears. In the example above, it was <code>mmcblk0</code>, but it could show up as <code>sda</code> or <code>sdb</code>, if you use a USB adapter.</p> <ul> <li>If <code>RO</code> is set to <code>1</code>, make sure the lock switch is not slid down.</li> <li>Device name is not the partition name. In the example above, the device name is <code>mmcblk0</code>, and the partition name is <code>mmcblk0p1</code>.</li> </ul> </li> <li> <p>Hit <code>CTRL</code> + <code>C</code> to exit the menu.</p> </li> <li> <p>Install the <code>parted</code> and <code>dosfstools</code> packages using your package manager of choice, if they are not already installed.</p> </li> <li> <p>In your terminal, run <code>sudo parted /dev/&lt;device name&gt; mklabel msdos</code></p> </li> <li> <p>Run <code>sudo parted -a opt /dev/&lt;device name&gt; mkpart primary fat32 0% 100%</code></p> </li> <li> <p>Run <code>sudo mkfs.vfat /dev/&lt;partition name&gt; -s 64</code> to format the new partition to FAT32.</p> </li> <li> <p>Run <code>sudo eject /dev/&lt;device name&gt;</code>, then remove the SD. You're done!</p> </li> </ol> <ol> <li> <p>Make sure your SD card is not inserted.</p> </li> <li> <p>Open KDE Partition Manager, inputting your password as needed.</p> </li> <li> <p>Insert your SD card and click <code>Refresh Devices</code>. The new device that shows up in the left pane is your SD card.</p> </li> <li> <p>Click your SD card, then click the <code>New Partition Table</code> button at the top of the window.</p> </li> <li> <p>When asked, choose <code>MS-Dos</code>. Do NOT use <code>GPT</code>. (1)</p> </li> <li> <p>Right click the <code>unallocated</code> space in the right pane, and select <code>New</code>.</p> </li> <li> <p>When selecting your filesystem, choose <code>FAT32</code> from the drop-down menu. (2)</p> </li> <li> <p>Click <code>OK</code>, then click <code>Apply</code>, and then <code>Apply Pending Operations</code>.</p> </li> <li> <p>Eject your SD card. You're done!</p> </li> </ol> <ol> <li> <p></p> </li> <li> <p></p> </li> </ol> <p>Warning</p> <p>Make sure to use the correct tab for your SD card size. This is important, or you may end up formatting to the wrong filesystem by choosing the wrong tab!</p> <p>Formatting an SD card will WIPE ALL FILES on it. If you have any data on the SD card that you would like to keep, back it up your PC before formatting.</p> 32GB or Smaller64GB or Larger <ol> <li> <p>Download the latest version of SD Memory Card Formatter.</p> <ul> <li>Accept the End User License Agreement to start the download</li> </ul> </li> <li> <p>Insert your SD card into your computer.</p> </li> <li> <p>Run <code>Install SD Card Formatter</code> (the <code>.mpkg</code> file) in the downloaded <code>.zip</code> file.</p> </li> <li> <p>Run <code>SD Card Formatter</code></p> </li> <li> <p>Select your SD card for <code>Select Card</code>.</p> <ul> <li>Make sure you choose the correct device, otherwise you might accidentally erase the wrong drive!</li> </ul> </li> <li> <p>Ensure that <code>Quick Format</code> is selected.</p> </li> <li> <p>Click <code>Format</code>.</p> </li> <li> <p>Wait for the format to finish.</p> </li> <li> <p>Click <code>OK</code>, then close the SD Card Formatter program.</p> </li> <li> <p>Eject your SD card, and then you're done!</p> </li> </ol> <ol> <li> <p>Download the latest version of SD Memory Card Formatter.</p> <ul> <li>Accept the End User License Agreement to start the download</li> </ul> </li> <li> <p>Insert your SD card into your computer.</p> </li> <li> <p>Run <code>Install SD Card Formatter</code> (the <code>.mpkg</code> file) in the downloaded <code>.zip</code> file.</p> </li> <li> <p>Run <code>SD Card Formatter</code></p> </li> <li> <p>Select your SD card for <code>Select Card</code>.</p> <ul> <li>Make sure you choose the correct device, otherwise you might accidentally erase the wrong drive!</li> </ul> </li> <li> <p>Ensure that <code>Quick Format</code> is selected.</p> </li> <li> <p>Click <code>Format</code>.</p> </li> <li> <p>Wait for the format to finish.</p> </li> <li> <p>Click <code>OK</code>, then close the SD Card Formatter program.</p> <p>Note</p> <p>You're not done yet! Your SD card will be formatted to exFAT at this point. The following steps will format it to FAT32.</p> </li> <li> <p>Choose a tab below based on the version of MacOS your computer is running to continue:</p> </li> </ol> OS X El Capitan (10.11) and laterOS X Yosemite (10.10) and earlier <ol> <li> <p>Launch the Disk Utility application.</p> </li> <li> <p>Select <code>Show All Devices</code> in the top-left <code>View</code> panel.</p> </li> <li> <p>Select your SD card from the sidebar.</p> <ul> <li>Make sure you choose the correct device, otherwise you might accidentally erase the wrong drive!</li> </ul> </li> <li> <p>Click <code>Erase</code> at the top.</p> </li> <li> <p>Ensure that <code>Format</code> is set to <code>MS-DOS (FAT32)</code>.</p> <ul> <li>On El Capitan (10.11) through Catalina (10.15) choose <code>MS-DOS (FAT)</code>.</li> </ul> </li> <li> <p>Ensure that <code>Scheme</code> is set to <code>Master Boot Record</code>.</p> <ul> <li>If <code>Scheme</code> does not appear, click <code>Cancel</code> and make sure to choose the device instead of a volume.</li> </ul> </li> <li> <p>Click <code>Erase</code>, then click <code>Close</code>.</p> </li> <li> <p>Eject your SD card, and then you're done!</p> </li> </ol> <ol> <li> <p>Launch the Disk Utility application.</p> </li> <li> <p>Select your SD card from the sidebar.</p> <ul> <li>Make sure you choose the correct device, otherwise you might accidentally erase the wrong drive!</li> </ul> </li> <li> <p>Click <code>Partition</code> at the top.</p> <ul> <li>If <code>Partition</code> does not appear, make sure to choose the device instead of a volume.</li> </ul> </li> <li> <p>Ensure that <code>Partition Layout</code> is set to <code>1 Partition</code>.</p> </li> <li> <p>Ensure that <code>Format</code> is set to <code>MS-DOS (FAT)</code>.</p> </li> <li> <p>From the <code>Options</code> button (below the partition table), select <code>Master Boot Record</code>.</p> </li> <li> <p>Click <code>OK</code>, then <code>Apply</code>, and then <code>Partition</code>.</p> </li> <li> <p>Eject your SD card, and then you're done!</p> </li> </ol>"},{"location":"tutorials/ncard-conversion/","title":"Converting Bootleg Games into an N-Card Flashcart","text":""},{"location":"tutorials/ncard-conversion/#converting-bootleg-games-into-an-n-card-flashcart","title":"Converting Bootleg Games into an N-Card Flashcart","text":"<p>N-Card Carts</p> <p>This tutorial only applies to N-Card based hardware. The best way to verify this is to check the back of the cart where the pins are located and look for text saying \"ASIC\" or \"ASNAND\". The label is not a reliable way to determine this as some bootleg games are not based on the N-Card hardware and cannot be modified.</p> <p>This tutorial requires a Nintendo DSi with Unlaunch. This guide cannot be performed on a Nintendo 3DS.</p>"},{"location":"tutorials/ncard-conversion/#setup-guide","title":"Setup Guide:","text":"<ol> <li> <p>Ensure your Nintendo DSi system has Unlaunch installed, as it is a requirement for this guide to work. Follow this guide on installing Unlaunch on your Nintendo DSi.</p> </li> <li> <p>Download GodMode9i and place it on the root of your DSi SD card.</p> </li> <li> <p>Download the N-Card Conversion Package and extract it. Place the extracted <code>N-Card Conversion</code> folder on to the root of your DSi SD Card.</p> </li> <li> <p>Insert your Game into the console and power it on.</p> </li> <li> <p>Launch Unlaunch's file browser by holding <code>A</code> + <code>B</code> while powering on your console. Navigate to the <code>N-Card Conversion</code> folder. Launch the <code>uDisk.nds</code> file while holding <code>Start</code> + <code>Select</code>. Unlaunch lists .nds files in alphabetical order by folder, so if you have many .nds files, you may have to scroll until you find it. This is the only file that must be loaded via Unlaunch.</p> </li> <li> <p>You will now be shown a formatting screen. Select the <code>FULL FORMAT</code> option. It will check the N-Card for bad blocks and perform a full format.</p> <p>Warning</p> <p>Do not power off your console while uDisk is formatting the cart, this may cause your game cart to become bricked!</p> </li> <li> <p>The formatting process is complete once it says <code>please copy xmenu.dat to card!</code>. Power off your console.</p> </li> <li> <p>Power on your console and launch GodMode9i from Twilightmenu++ or Unlaunch. Enter the <code>[sd:]</code> drive and nagivate to the <code>N-Card Conversion</code> folder. Highlight <code>autorun1.nds</code> and press <code>Y</code> to copy it to the clipboard.</p> </li> <li> <p>Back out to the drive screen and enter the <code>[fat:]</code> drive. Press <code>Y</code> to paste and select the <code>Copy files</code> option.</p> </li> <li> <p>Power off your console while holding <code>A</code> + <code>B</code> to boot into Unlaunch. Load up the <code>uDisk.nds</code> file again, this time without holding any buttons. You will be asked if you would like to update uDisk, press <code>A</code> to continue. The update process will stop at 88%; this is normal. Once it reaches 88%, wait a few seconds, then power off the console.</p> <p>Tip</p> <p>At this stage you may now continue using a Slot 2 USB adapter on a DS/DS Lite system if you prefer, as the cartridge now has a working uDisk installed. You can follow the below steps but instead copying &amp; deleting the required files from a computer.</p> </li> <li> <p>Power on your console and launch GodMode9i via Unlaunch or Twilightmenu++. Enter the <code>[sd:]</code> drive and nagivate to the <code>N-Card Conversion</code> folder. Highlight <code>DSYSTEM</code> and press the <code>L</code> trigger, then highlight <code>xmenu.dat</code> and press the <code>L</code> trigger. Press <code>Y</code> to copy the two files to the clipboard.</p> </li> <li> <p>Back out to the drive screen and enter the <code>[fat:]</code> drive. Press <code>Y</code> to paste and select the <code>Copy files</code> option.</p> </li> <li> <p>Highlight <code>autorun1.nds</code> and Press <code>X</code> to delete it, press <code>A</code> to confirm.</p> </li> <li> <p>Reboot your console and boot the cart, it should now boot into the xmenu interface. Your bootleg game has now been converted into an N-Card flashcart! The capacity of your N-Card will be shown at the top left of the screen.</p> <p>Tip</p> <p>You may now copy .NDS files to the N-Card via GodMode9i on a DSi or 3DS, or via a Slot 2 USB Adapter with a DS/DS Lite. Bear in mind that the N-Card xmenu does not contain any anti-piracy patches so you may wish to patch your ROMs where necessary, and ROMs larger than 256MB cannot be played on xmenu, for both these issues you may use an alternative loader instead such as Twilightmenu++.</p> </li> </ol>"},{"location":"tutorials/ncard-conversion/#testing-the-sram-battery","title":"Testing the SRAM Battery","text":"<p>The N-Card and it's clones typically use an SRAM chip with a small coin cell in order to hold save data of currently running game. When the console powered off and then powered back on, this save data is then written back to the N-Card's internal flash storage from the SRAM.</p> <p>On some units, usually due to age, this battery may not hold much of a charge, or sometimes no charge at all, leading to the contents of the SRAM being lost if the console is powered off, or powered off for too long. This usually results in a corrupted or lost save file. In order to test the battery on your N-Card, you can use nrioSaveTester.</p> <ol> <li> <p>Download nrioSaveTester and copy it to the internal storage of your N-Card.</p> </li> <li> <p>Boot the N-Card and highlight the the <code>nrioSaveTester.nds</code> file. Hold Select and Use the D-Pad left or right to select the \"4 KBit\" save option on the top screen, then press <code>A</code> to load it. Press <code>B</code> to write a new save file. Press <code>A</code> to power off your console.</p> </li> <li> <p>You can now choose how long to wait before testing the save again. To test the save, Power on your console and boot the N-Card and launch the <code>nrioSaveTester.nds</code> file. Press <code>A</code> to test the save, then press <code>A</code> to power off your console. An example can be waiting an hour then testing, then a day and then a week. When the save test fails, the time difference between last testing the save and now should indicate roughly how long the SRAM battery can hold a charge for.</p> </li> </ol>"},{"location":"tutorials/twilight-dualboot/","title":"Setting Up TWiLight Menu++ As Secondary Kernel","text":"<p>Info</p> <p>A dual-boot setup is useful if your cart's regular kernel works fine overall, but has issues with a few specific games such as romhacks. This guide will allow you to continue using your cart's stock kernel as primary, while being able to launch into TWiLight Menu++ to use nds-bootstrap when you want to play a problematic game.</p>"},{"location":"tutorials/twilight-dualboot/#setup-guide","title":"Setup Guide:","text":"<ol> <li> <p>Download the latest release of TWiLight Menu++ Flashcart Edition.</p> </li> <li> <p>Extract the downloaded <code>TWiLightMenu-Flashcard.7z</code> file with 7-Zip.</p> </li> <li> <p>From within the TWiLight files, copy the following files/folders to your SD card root:</p> <ul> <li><code>_nds</code> folder</li> <li><code>roms</code> folder</li> <li><code>BOOT.NDS</code></li> </ul> </li> <li> <p>Place roms you'd like to run with TWiLight Menu++ into <code>/roms/nds</code> on your SD card.</p> </li> <li> <p>Insert the SD card back into your cart, plug the cart into your DS, and boot into your kernel.</p> </li> <li> <p>In your cart's menu, navigate to and select <code>BOOT.NDS</code> to launch TWiLight Menu++.</p> </li> <li> <p>In TWiLight, navigate to the <code>roms</code> folder, and then the <code>nds</code> folder where you placed your NDS rom file. Launch it to boot the game using nds-bootstrap.</p> </li> </ol>"},{"location":"tutorials/twilight/","title":"Setting Up TWiLight Menu++ As Primary Kernel","text":""},{"location":"tutorials/twilight/#setup-guide","title":"Setup Guide:","text":"YSMenu CartsAll Other Carts <p>Info</p> <p>This tab applies to you if your cart is compatible with YSMenu. It will setup YSMenu as well as TWiLight, so that you can choose to use YSMenu as your game loader in TWiLight Menu++.</p> <p>Note</p> <p>This guide assumes your cart is listed under <code>DSTTi-Clone YSMenu</code>, <code>R4i-SDHC YSMenu</code>, or <code>DSOnei SDHC YSMenu</code> in the compatibility list. All of these carts can use the guide below without modification. If you're using an M3 or R4SDHC cart, use their respective folders to source files from instead of <code>DSTTi-Clone YSMenu</code> in step 3/4.</p> <ol> <li> <p>Format the SD card you are using by following this guide.</p> </li> <li> <p>Download the RetroGameFan YSMenu 7.06 kernel.</p> </li> <li> <p>Extract the YSMenu .7z file you downloaded using 7-Zip, then go into the <code>DSTTi-Clone YSMenu</code> folder.</p> </li> <li> <p>From this folder, copy the following files/folders to your SD card root:</p> <ul> <li><code>TTMenu</code> folder</li> <li><code>TTMenu.dat</code></li> </ul> </li> <li> <p>Rename the <code>TTMenu.dat</code> file in your SD root to <code>YSMenu.nds</code>.</p> </li> <li> <p>Download the latest release of TWiLight Menu++ Flashcart Edition.</p> </li> <li> <p>Extract the downloaded <code>TWiLightMenu-Flashcard.7z</code> file with 7-Zip.</p> </li> <li> <p>From within the TWiLight files, copy the following files/folders to your SD card root:</p> <ul> <li><code>_nds</code> folder</li> <li><code>roms</code> folder</li> <li><code>BOOT.NDS</code></li> </ul> </li> <li> <p>Open the <code>Autoboot</code> folder within the TWiLight files. Find the folder that corresponds to your flashcart, and copy the contents of that folder to your SD card root.</p> </li> <li> <p>Insert the SD card back into your cart, plug the cart into your DS, and see if it boots into TWiLight.</p> </li> </ol> <p>Switching Loaders Between YSMenu and NDS-Bootstrap</p> <p>TWiLight Menu++ defaults to using nds-bootstrap for all games. If you'd like to boot a title with YSMenu instead, click <code>Y</code> with the game selected, and set the game loader to \"Kernel\".</p> <p>You can also set YSMenu as the default TWiLight loader to use it for all games rather than specific ones. If you'd prefer this behavior, do the following: Open TWLMenu++ Settings, switch to the <code>Games and Apps Settings</code> page, then set <code>Game Loader</code> to <code>Kernel</code>.</p> <ol> <li> <p>Download the latest release of TWiLight Menu++ Flashcart Edition.</p> </li> <li> <p>Extract the downloaded <code>TWiLightMenu-Flashcard.7z</code> file with 7-Zip.</p> </li> <li> <p>From within the TWiLight files, copy the following files/folders to your SD card root:</p> <ul> <li><code>_nds</code> folder</li> <li><code>roms</code> folder</li> <li><code>BOOT.NDS</code></li> </ul> </li> <li> <p>Open the <code>Autoboot</code> folder within the TWiLight files. Find the folder that corresponds to your flashcart, and copy the contents of that folder to your SD card root.</p> </li> <li> <p>Next navigate to the <code>Flashcart Loader</code> folder. Inside you will find a <code>README.txt</code> file. Open this file and locate your cart. This will tell you what folder corresponds to your cart.</p> <p>Note</p> <p>If you are unable to find your cart in the list, it doesn't have a loader that is compatible with TWiLight. Therefore, you will only be able to use NDS-Bootstrap to load games. Skip this, and the following step.</p> </li> <li> <p>After identifying the correct folder for your particular cart, open that folder and copy its contents to your SD card root.</p> </li> <li> <p>Insert the SD card back into your cart, plug the cart into your DS, and see if it boots into TWiLight.</p> </li> </ol> <p>Switching Loaders Between Flashcart Kernel and NDS-Bootstrap</p> <p>TWiLight Menu++ defaults to using nds-bootstrap for all games. If you'd like to boot a title with your flashcart kernel instead, click <code>Y</code> with the game selected, and set the game loader to \"Kernel\".</p> <p>You can also set your native kernel as the default TWiLight loader to use it for all games rather than specific ones. If you'd prefer this behavior, do the following: Open TWLMenu++ Settings, switch to the <code>Games and Apps Settings</code> page, then set <code>Game Loader</code> to <code>Kernel</code>.</p>"},{"location":"tutorials/unbrick/","title":"Unbricking Flashcarts","text":""},{"location":"tutorials/unbrick/#unbricking-flashcarts","title":"Unbricking Flashcarts","text":""},{"location":"tutorials/unbrick/#all-carts-with-spi-type-flash","title":"All carts with SPI-type flash","text":"<p>Why is This Necessary?</p> <p>Many R4iTT based flashcarts are susceptible to flashrom corruption. In some cases, this can happen randomly during normal use, and in other cases, this can be caused by running incompatible kernels on this hardware, such as YSMenu. Unfortunately, DSTT cart commands correlate to R4iTT flashrom write commands. Executing YSMenu on an R4iTT ends up rewriting parts of the flashrom and bricks the cart, which requires a chip programmer to recover from.</p> <p>Bricked DEMON/DSTT Flashcarts</p> <p></p> <p>If you're aiming to unbrick a DEMON or DSTT based flashcart, first make sure that it uses an SPI chip for the flashrom, not a NOR chip. NOR chip reflashing is not supported by this guide.</p> <p>Also note that if a flashcart with a NOR chip is bricked, it's more likely to have bad solder joints on the NOR chip rather than being corrupt. Reflowing the NOR chip with a soldering iron and flux is very likely to fix these carts if they are bricked.</p> <p>Warning</p> <p>Soldering is required. Using clip-on attachments to connect to the SPI flash chip while it's still on the flashcart PCB does not work.</p> <p>This guide is a last resort if your cart is truly bricked. Make sure you've attempted easier fixes such as cleaning the cart's gold contacts with rubbing alcohol, or placing a piece of paper on the label side of the cart to improve contact with the cart reader.</p>"},{"location":"tutorials/unbrick/#requirements","title":"Requirements","text":"<ol> <li> <p>CH341A or Similar EEPROM/SPI Flash Programmer</p> <ul> <li>These programmers can be found easily by searching online marketplaces for <code>ch341a</code> in this guide.</li> <li>We will use the CH341A Mini Programmer variant of the CH341A.</li> </ul> </li> <li> <p>AsProgrammer - A program used to read/write chips using the CH341A and other compatible programmers.</p> </li> <li> <p>Windows CH341A Serial &amp; Parallel Drivers</p> <ul> <li>Parallel Drivers</li> <li>Serial Drivers</li> <li>For other operating systems (not covered in this guide), see the main driver repository.</li> </ul> </li> <li> <p>Flashrom Backup - Obtaining this will be covered below.</p> </li> </ol>"},{"location":"tutorials/unbrick/#unbrick-guide","title":"Unbrick Guide","text":""},{"location":"tutorials/unbrick/#identifying-hardware","title":"Identifying Hardware","text":"<p>Info</p> <p>The flashrom backup you will need to use depends on the capacity of your SPI flash chip on the board. Usually these carts will have either a 2MB or a 4MB flash chip.</p> <ol> <li> <p>To check the chip type and capacity, you will need to find the SPI chip on your cart.</p> <ul> <li>Here's an example PCB from an r4igold.cc 2013 cart.</li> <li>Note that some carts have multiple 8-pin chips on the board. In these cases, remember that if the chip doesn't start with <code>25</code>, then it IS NOT an SPI chip. If the cart has a NOR chip, then it does not use an 8-pin SPI flash at all.</li> </ul> </li> <li> <p>In the example above, we see a WinBond <code>25Q16CVY05</code> chip on the PCB. The <code>25</code> at the front means this is a <code>25XX</code> chip, therefore we will use the <code>25XX</code> port on the CH341A.</p> </li> <li> <p>The next part is <code>Q16</code>. This means the chip is 16 Mbit in capacity, which is equal to 2MB. If your chip says <code>Q32</code>, that's 32Mbit = 4MB.</p> </li> <li> <p>The last part of the number is <code>CVY05</code>. This will be useful to select the correct chip in AsProgrammer, keep it in mind. For this example, we would select <code>Winbond</code> -&gt; <code>W25Q16CV</code>.</p> </li> <li> <p>You will also notice that there is a circular dot present on the chip near one the legs. This indicates pin 1 of the chip for orientation. The CH341A also has these dot markings to help you orient the chip correctly on the adapter board.</p> </li> </ol>"},{"location":"tutorials/unbrick/#obtaining-a-flashrom","title":"Obtaining a Flashrom","text":"<ol> <li> <p>Next, you will need to visit the flashrom archive.</p> </li> <li> <p>Choose the correct <code>.bin</code> flashrom backup for your cart in the archive. You can reference the photos to find a matching or similar PCB, and check the file size to make sure it's the correct size for your flashrom.</p> <ul> <li>For the example, <code>R4iGold.cc Flash Backups</code> -&gt; <code>R4iGold.cc_3DS_2013_imagedump.bin</code> would be a good fit.</li> <li>If you can't find an exact match for your cart, try to find a PCB with the same flashrom size, and the same ASIC chip, then use that backup.</li> </ul> </li> </ol> <p>Cross-Flashing</p> <p>Some flashroms can be flashed onto similar hardware, even if it does not look identical.</p> <p>Currently, it is known that R4i3D carts can successfully be flashed with r4igold.cc 2MB flashrom, as long as the PCB does NOT have <code>PD901A</code> written on it. Carts with PD901A PCBs can use the r4dspro flashrom. R4iPlat is also compatible with the r4dspro flashrom.</p> <p>This technique can also be used to make carts that don't boot on stock DSi/3DS boot on stock consoles again, by using a flashrom from another cart that IS compatible with stock DSi/3DS. r4igold.cc FW7 is known to be compatible with all consoles on stock FW.</p>"},{"location":"tutorials/unbrick/#preparing-the-chip-for-flashing","title":"Preparing the Chip for Flashing","text":"<ol> <li> <p>Now we will need to get the SPI flash chip off the flashcart PCB and mounted onto the CH341A flasher.</p> <ul> <li>A hot air gun will be the easiest way to remove the chip if you have one. Put some flux on the pins, then rotate the air around the chip until the solder liquefies, and then take the chip off with tweezers.</li> <li>If a hot air gun isn't available, you can also use a soldering iron as these chips have a fairly small number of mount points.<ol> <li>Add some leaded solder to the pins with your iron.</li> <li>Wedge your tweezers underneath the pins of the cart and gently pull upward while running the iron across all four pins. This will allow you to lift one side of the chip upward and away from the pads on the PCB.</li> <li>Once one side is lifted, repeat the step above for the second row of four pins to remove the chip from the board.</li> </ol> </li> </ul> </li> <li> <p>Clean up the chip with your iron if any pins are bridged or if there's excess solder on the pins. You should be left with a clean chip that looks like this.</p> </li> <li> <p>Next, it needs to be mounted to the CH341A for flashing. You have a couple options for doing so, depending on which accessories/clips you were sent with your CH341A.</p> </li> <li> <p>The easiest and most time-effective method is to use a solder-less mount with clips, shown below. Simply place the adapter into the CH341A, and then push down the lock. Then press down on the adapter to open it, place the chip inside with tweezers, and let go to lock the chip into the adapter.</p> <p> </p> <ul> <li>Remember to orient the chip so that the dot on the chip matches pin 1 on the CH341A.</li> </ul> </li> <li> <p>The second method for connecting the chip to the flasher is to solder the chip onto an adapter board, like so:</p> <p> </p> <ul> <li>Notice the numbers next to the pins that slot into the CH341A. Use these numbers to orient the adapter board correctly.</li> </ul> </li> </ol>"},{"location":"tutorials/unbrick/#flashing-the-chip","title":"Flashing the Chip","text":"<ol> <li> <p>Connect the CH341A with the chip attached to your PC.</p> </li> <li> <p>Download and run the installer for both serial and parallel CH341A drivers. After installation, confirm that the flasher shows up properly in Device Manager - (<code>\u229e Win</code>+ <code>R</code> -&gt; <code>devmgmt.msc</code>)</p> <ul> <li>CH341A with properly installed drivers.</li> <li>You may need to unplug and re-plug the CH341A into your system if it isn't properly recognized after installing drivers.</li> </ul> </li> <li> <p>Download AsProgrammer, extract it, then run the program.</p> </li> <li> <p>In AsProgrammer, select <code>Hardware</code> -&gt; <code>CH341a</code></p> </li> <li> <p>Next, set the model of the chip you're flashing. Select <code>IC</code> -&gt; <code>SPI</code> -&gt; <code>&lt;Manufacturer Here&gt;</code> -&gt; <code>&lt;Model Number Here&gt;</code></p> <ul> <li>For the example, we would select <code>WINBOND</code> for manufacturer, and <code>W25Q16CV</code> for model number.</li> </ul> </li> <li> <p>AsProgrammer is now setup to read/write the chip. First, attempt a read on the chip to make sure everything is working properly. In AsProgrammer, click the <code>Read IC</code> button to read the data off the chip.</p> </li> <li> <p>If you'd like, you can save the read data to a <code>.bin</code> file on your PC by clicking the Save icon.</p> </li> <li> <p>If the read operation was successful, you can proceed to flashing the chip with the downloaded backup. Click on <code>Erase IC</code> to wipe all data on the chip.</p> </li> <li> <p>Next, open the downloaded backup <code>.bin</code> file in AsProgrammer.</p> </li> <li> <p>Click <code>Program IC</code> to write the opened <code>.bin</code> backup onto the chip.</p> </li> <li> <p>Once the process completes, click <code>Verify IC</code> to check that the chip's data matches the <code>.bin</code> you flashed.</p> <ul> <li>If you run into issues when flashing, try reseating the chip in the adapter, or in the case of a soldered mount, check your solder points and reflow them.</li> </ul> </li> <li> <p>Close AsProgrammer if no issues were found.</p> </li> </ol>"},{"location":"tutorials/unbrick/#finishing-up","title":"Finishing Up","text":"<ol> <li> <p>The chip is now ready to go back on the flashcart PCB.</p> </li> <li> <p>Remove the chip from the CH341A adapter, and then solder it back onto the PCB.</p> <ul> <li>You may find it helpful to wick up leftover solder on the PCB pads with a solder wick, so that you can set the chip down flat on the board's pads before soldering.</li> </ul> </li> <li> <p>Reassemble the cart and test it in your DS. If it shows up properly, you're done!</p> </li> </ol>"},{"location":"tutorials/unbrick/#troubleshooting","title":"Troubleshooting","text":"<ol> <li> <p>If the cart does not work after flashing, try cleaning the gold contacts on the PCB with rubbing alcohol. The DS will fail to read the cart if the contacts are dirty.</p> </li> <li> <p>If cleaning the cart did not help, check pins on your SPI flash chip and make sure they're solidly connected to the board. You can use tweezers to gently press on each pin and make sure that it does not move. Reflow any bad joints.</p> </li> <li> <p>Lastly, if nothing helps, you may want to try reflashing the chip, or using a different flashrom backup in case you flashed a wrong or incompatible backup.</p> </li> </ol>"}]}